
io_handler.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00000c98  00000d2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000043  0080017e  0080017e  00000daa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000daa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ddc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a65  00000000  00000000  00000f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b1c  00000000  00000000  000029b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d2c  00000000  00000000  000034d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  00004204  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ca  00000000  00000000  00004568  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cb7  00000000  00000000  00004d32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  000059e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
   2:	00 00       	nop
   4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
   a:	00 00       	nop
   c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
   e:	00 00       	nop
  10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
  12:	00 00       	nop
  14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
  16:	00 00       	nop
  18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
  1e:	00 00       	nop
  20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
  22:	00 00       	nop
  24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
  26:	00 00       	nop
  28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
  2e:	00 00       	nop
  30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
  32:	00 00       	nop
  34:	f6 c0       	rjmp	.+492    	; 0x222 <__vector_13>
  36:	00 00       	nop
  38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
  3e:	00 00       	nop
  40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
  42:	00 00       	nop
  44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
  46:	00 00       	nop
  48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
  4e:	00 00       	nop
  50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
  52:	00 00       	nop
  54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
  56:	00 00       	nop
  58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
  5e:	00 00       	nop
  60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
  62:	00 00       	nop
  64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
  66:	00 00       	nop
  68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
  6e:	00 00       	nop
  70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
  72:	00 00       	nop
  74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
  76:	00 00       	nop
  78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
  7e:	00 00       	nop
  80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
  82:	00 00       	nop
  84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
  86:	00 00       	nop
  88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	25 03       	mulsu	r18, r21
  8e:	34 03       	mulsu	r19, r20
  90:	cf 03       	fmulsu	r20, r23
  92:	5b 03       	fmul	r21, r19
  94:	77 03       	mulsu	r23, r23
  96:	20 04       	cpc	r2, r0
  98:	80 03       	fmuls	r16, r16
  9a:	9c 03       	fmulsu	r17, r20
  9c:	23 03       	mulsu	r18, r19
  9e:	a5 03       	fmuls	r18, r21
  a0:	c1 03       	fmuls	r20, r17

000000a2 <__ctors_end>:
  a2:	11 24       	eor	r1, r1
  a4:	1f be       	out	0x3f, r1	; 63
  a6:	cf ef       	ldi	r28, 0xFF	; 255
  a8:	d0 e4       	ldi	r29, 0x40	; 64
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	a0 e0       	ldi	r26, 0x00	; 0
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	e8 e9       	ldi	r30, 0x98	; 152
  b6:	fc e0       	ldi	r31, 0x0C	; 12
  b8:	00 e0       	ldi	r16, 0x00	; 0
  ba:	0b bf       	out	0x3b, r16	; 59
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
  be:	07 90       	elpm	r0, Z+
  c0:	0d 92       	st	X+, r0
  c2:	ae 37       	cpi	r26, 0x7E	; 126
  c4:	b1 07       	cpc	r27, r17
  c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	ae e7       	ldi	r26, 0x7E	; 126
  cc:	b1 e0       	ldi	r27, 0x01	; 1
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
  d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
  d2:	a1 3c       	cpi	r26, 0xC1	; 193
  d4:	b2 07       	cpc	r27, r18
  d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
  d8:	d0 d3       	rcall	.+1952   	; 0x87a <main>
  da:	dc c5       	rjmp	.+3000   	; 0xc94 <_exit>

000000dc <__bad_interrupt>:
  dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <initUSART>:
	for(unsigned char i = 0; i < 89; i++){
		if(sNotePitches[i] == note){
			return i;
		}
	}
}
  de:	e1 ec       	ldi	r30, 0xC1	; 193
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	88 61       	ori	r24, 0x18	; 24
  e6:	80 83       	st	Z, r24
  e8:	8e e0       	ldi	r24, 0x0E	; 14
  ea:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  ee:	8f e0       	ldi	r24, 0x0F	; 15
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  f4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  f8:	08 95       	ret

000000fa <USART_Flush>:
  fa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  fe:	88 23       	and	r24, r24
 100:	44 f4       	brge	.+16     	; 0x112 <USART_Flush+0x18>
 102:	a6 ec       	ldi	r26, 0xC6	; 198
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e0 ec       	ldi	r30, 0xC0	; 192
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	8c 91       	ld	r24, X
 10c:	80 81       	ld	r24, Z
 10e:	88 23       	and	r24, r24
 110:	e4 f3       	brlt	.-8      	; 0x10a <USART_Flush+0x10>
 112:	08 95       	ret

00000114 <USART_Send>:
 114:	e0 ec       	ldi	r30, 0xC0	; 192
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	90 81       	ld	r25, Z
 11a:	95 ff       	sbrs	r25, 5
 11c:	fd cf       	rjmp	.-6      	; 0x118 <USART_Send+0x4>
 11e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 122:	08 95       	ret

00000124 <sendPacket>:
 124:	ef 92       	push	r14
 126:	ff 92       	push	r15
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	7b 01       	movw	r14, r22
 132:	8a 01       	movw	r16, r20
 134:	e9 01       	movw	r28, r18
 136:	ee df       	rcall	.-36     	; 0x114 <USART_Send>
 138:	e0 ec       	ldi	r30, 0xC0	; 192
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	85 ff       	sbrs	r24, 5
 140:	fd cf       	rjmp	.-6      	; 0x13c <sendPacket+0x18>
 142:	f7 01       	movw	r30, r14
 144:	80 81       	ld	r24, Z
 146:	e6 df       	rcall	.-52     	; 0x114 <USART_Send>
 148:	d8 df       	rcall	.-80     	; 0xfa <USART_Flush>
 14a:	e0 ec       	ldi	r30, 0xC0	; 192
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	85 ff       	sbrs	r24, 5
 152:	fd cf       	rjmp	.-6      	; 0x14e <sendPacket+0x2a>
 154:	f8 01       	movw	r30, r16
 156:	80 81       	ld	r24, Z
 158:	dd df       	rcall	.-70     	; 0x114 <USART_Send>
 15a:	cf df       	rcall	.-98     	; 0xfa <USART_Flush>
 15c:	e0 ec       	ldi	r30, 0xC0	; 192
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	85 ff       	sbrs	r24, 5
 164:	fd cf       	rjmp	.-6      	; 0x160 <sendPacket+0x3c>
 166:	f8 01       	movw	r30, r16
 168:	81 81       	ldd	r24, Z+1	; 0x01
 16a:	d4 df       	rcall	.-88     	; 0x114 <USART_Send>
 16c:	c6 df       	rcall	.-116    	; 0xfa <USART_Flush>
 16e:	e0 ec       	ldi	r30, 0xC0	; 192
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	85 ff       	sbrs	r24, 5
 176:	fd cf       	rjmp	.-6      	; 0x172 <sendPacket+0x4e>
 178:	88 81       	ld	r24, Y
 17a:	cc df       	rcall	.-104    	; 0x114 <USART_Send>
 17c:	be df       	rcall	.-132    	; 0xfa <USART_Flush>
 17e:	e0 ec       	ldi	r30, 0xC0	; 192
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	85 ff       	sbrs	r24, 5
 186:	fd cf       	rjmp	.-6      	; 0x182 <sendPacket+0x5e>
 188:	89 81       	ldd	r24, Y+1	; 0x01
 18a:	c4 df       	rcall	.-120    	; 0x114 <USART_Send>
 18c:	b6 df       	rcall	.-148    	; 0xfa <USART_Flush>
 18e:	e0 ec       	ldi	r30, 0xC0	; 192
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	85 ff       	sbrs	r24, 5
 196:	fd cf       	rjmp	.-6      	; 0x192 <sendPacket+0x6e>
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	bc df       	rcall	.-136    	; 0x114 <USART_Send>
 19c:	ae df       	rcall	.-164    	; 0xfa <USART_Flush>
 19e:	e0 ec       	ldi	r30, 0xC0	; 192
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	85 ff       	sbrs	r24, 5
 1a6:	fd cf       	rjmp	.-6      	; 0x1a2 <sendPacket+0x7e>
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	b4 df       	rcall	.-152    	; 0x114 <USART_Send>
 1ac:	e0 ec       	ldi	r30, 0xC0	; 192
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	85 ff       	sbrs	r24, 5
 1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <sendPacket+0x8c>
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	0f 91       	pop	r16
 1be:	ff 90       	pop	r15
 1c0:	ef 90       	pop	r14
 1c2:	08 95       	ret

000001c4 <usartTask>:
 1c4:	cf 93       	push	r28
 1c6:	c8 2f       	mov	r28, r24
 1c8:	29 ea       	ldi	r18, 0xA9	; 169
 1ca:	31 e0       	ldi	r19, 0x01	; 1
 1cc:	45 ea       	ldi	r20, 0xA5	; 165
 1ce:	51 e0       	ldi	r21, 0x01	; 1
 1d0:	6d ea       	ldi	r22, 0xAD	; 173
 1d2:	71 e0       	ldi	r23, 0x01	; 1
 1d4:	8a ea       	ldi	r24, 0xAA	; 170
 1d6:	a6 df       	rcall	.-180    	; 0x124 <sendPacket>
 1d8:	8c 2f       	mov	r24, r28
 1da:	cf 91       	pop	r28
 1dc:	08 95       	ret

000001de <TimerOn>:
 1de:	8b e0       	ldi	r24, 0x0B	; 11
 1e0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1e4:	8d e7       	ldi	r24, 0x7D	; 125
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ec:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1f0:	82 e0       	ldi	r24, 0x02	; 2
 1f2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 1f6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1fa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 202:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 206:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 20a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 20e:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_avr_timer_cntcurr>
 212:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <_avr_timer_cntcurr+0x1>
 216:	a0 93 81 01 	sts	0x0181, r26	; 0x800181 <_avr_timer_cntcurr+0x2>
 21a:	b0 93 82 01 	sts	0x0182, r27	; 0x800182 <_avr_timer_cntcurr+0x3>
 21e:	78 94       	sei
 220:	08 95       	ret

00000222 <__vector_13>:
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	8f 93       	push	r24
 22e:	9f 93       	push	r25
 230:	af 93       	push	r26
 232:	bf 93       	push	r27
 234:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <_avr_timer_cntcurr>
 238:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <_avr_timer_cntcurr+0x1>
 23c:	a0 91 81 01 	lds	r26, 0x0181	; 0x800181 <_avr_timer_cntcurr+0x2>
 240:	b0 91 82 01 	lds	r27, 0x0182	; 0x800182 <_avr_timer_cntcurr+0x3>
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	a1 09       	sbc	r26, r1
 248:	b1 09       	sbc	r27, r1
 24a:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_avr_timer_cntcurr>
 24e:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <_avr_timer_cntcurr+0x1>
 252:	a0 93 81 01 	sts	0x0181, r26	; 0x800181 <_avr_timer_cntcurr+0x2>
 256:	b0 93 82 01 	sts	0x0182, r27	; 0x800182 <_avr_timer_cntcurr+0x3>
 25a:	89 2b       	or	r24, r25
 25c:	8a 2b       	or	r24, r26
 25e:	8b 2b       	or	r24, r27
 260:	99 f4       	brne	.+38     	; 0x288 <__vector_13+0x66>
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <TimerFlag>
 268:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 26c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 270:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 274:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 278:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_avr_timer_cntcurr>
 27c:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <_avr_timer_cntcurr+0x1>
 280:	a0 93 81 01 	sts	0x0181, r26	; 0x800181 <_avr_timer_cntcurr+0x2>
 284:	b0 93 82 01 	sts	0x0182, r27	; 0x800182 <_avr_timer_cntcurr+0x3>
 288:	bf 91       	pop	r27
 28a:	af 91       	pop	r26
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <TimerSet>:
 29a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 29e:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 2a2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 2a6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 2aa:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <_avr_timer_cntcurr>
 2ae:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <_avr_timer_cntcurr+0x1>
 2b2:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <_avr_timer_cntcurr+0x2>
 2b6:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <_avr_timer_cntcurr+0x3>
 2ba:	08 95       	ret

000002bc <scaleTo100>:
 2bc:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2c0:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	4e d4       	rcall	.+2204   	; 0xb66 <__floatunsisf>
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	52 e4       	ldi	r21, 0x42	; 66
 2d2:	50 d3       	rcall	.+1696   	; 0x974 <__subsf3>
 2d4:	2c ee       	ldi	r18, 0xEC	; 236
 2d6:	31 e5       	ldi	r19, 0x51	; 81
 2d8:	4c e1       	ldi	r20, 0x1C	; 28
 2da:	51 e4       	ldi	r21, 0x41	; 65
 2dc:	b0 d3       	rcall	.+1888   	; 0xa3e <__divsf3>
 2de:	17 d4       	rcall	.+2094   	; 0xb0e <__fixunssfsi>
 2e0:	86 2f       	mov	r24, r22
 2e2:	08 95       	ret

000002e4 <captureSingleKnob>:
 2e4:	8f 71       	andi	r24, 0x1F	; 31
 2e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 2ea:	00 00       	nop
 2ec:	87 ee       	ldi	r24, 0xE7	; 231
 2ee:	93 e0       	ldi	r25, 0x03	; 3
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <captureSingleKnob+0xc>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <captureSingleKnob+0x12>
 2f6:	00 00       	nop
 2f8:	e1 cf       	rjmp	.-62     	; 0x2bc <scaleTo100>
 2fa:	08 95       	ret

000002fc <getPotentiometerSnapshot>:
 2fc:	0f 93       	push	r16
 2fe:	1f 93       	push	r17
 300:	cf 93       	push	r28
 302:	8c 01       	movw	r16, r24
 304:	c0 e0       	ldi	r28, 0x00	; 0
 306:	cf 5f       	subi	r28, 0xFF	; 255
 308:	8c 2f       	mov	r24, r28
 30a:	ec df       	rcall	.-40     	; 0x2e4 <captureSingleKnob>
 30c:	f8 01       	movw	r30, r16
 30e:	81 93       	st	Z+, r24
 310:	8f 01       	movw	r16, r30
 312:	c4 30       	cpi	r28, 0x04	; 4
 314:	c1 f7       	brne	.-16     	; 0x306 <getPotentiometerSnapshot+0xa>
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	08 95       	ret

0000031e <isPressed>:
 31e:	80 b1       	in	r24, 0x00	; 0
 320:	80 95       	com	r24
 322:	80 72       	andi	r24, 0x20	; 32
 324:	08 95       	ret

00000326 <copyValues>:
 326:	fb 01       	movw	r30, r22
 328:	dc 01       	movw	r26, r24
 32a:	9b 01       	movw	r18, r22
 32c:	2c 5f       	subi	r18, 0xFC	; 252
 32e:	3f 4f       	sbci	r19, 0xFF	; 255
 330:	81 91       	ld	r24, Z+
 332:	8d 93       	st	X+, r24
 334:	e2 17       	cp	r30, r18
 336:	f3 07       	cpc	r31, r19
 338:	d9 f7       	brne	.-10     	; 0x330 <copyValues+0xa>
 33a:	08 95       	ret

0000033c <updateValues>:
 33c:	ef 92       	push	r14
 33e:	ff 92       	push	r15
 340:	0f 93       	push	r16
 342:	1f 93       	push	r17
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	a4 2f       	mov	r26, r20
 34a:	b5 2f       	mov	r27, r21
 34c:	e6 2e       	mov	r14, r22
 34e:	f7 2e       	mov	r15, r23
 350:	e0 e0       	ldi	r30, 0x00	; 0
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	01 e0       	ldi	r16, 0x01	; 1
 356:	10 e0       	ldi	r17, 0x00	; 0
 358:	b8 01       	movw	r22, r16
 35a:	0e 2e       	mov	r0, r30
 35c:	02 c0       	rjmp	.+4      	; 0x362 <updateValues+0x26>
 35e:	66 0f       	add	r22, r22
 360:	77 1f       	adc	r23, r23
 362:	0a 94       	dec	r0
 364:	e2 f7       	brpl	.-8      	; 0x35e <updateValues+0x22>
 366:	e9 01       	movw	r28, r18
 368:	48 81       	ld	r20, Y
 36a:	50 e0       	ldi	r21, 0x00	; 0
 36c:	46 23       	and	r20, r22
 36e:	57 23       	and	r21, r23
 370:	64 17       	cp	r22, r20
 372:	75 07       	cpc	r23, r21
 374:	21 f4       	brne	.+8      	; 0x37e <updateValues+0x42>
 376:	ec 01       	movw	r28, r24
 378:	48 81       	ld	r20, Y
 37a:	4c 93       	st	X, r20
 37c:	0b c0       	rjmp	.+22     	; 0x394 <updateValues+0x58>
 37e:	ec 01       	movw	r28, r24
 380:	48 81       	ld	r20, Y
 382:	e7 01       	movw	r28, r14
 384:	58 81       	ld	r21, Y
 386:	54 17       	cp	r21, r20
 388:	29 f0       	breq	.+10     	; 0x394 <updateValues+0x58>
 38a:	4c 93       	st	X, r20
 38c:	e9 01       	movw	r28, r18
 38e:	48 81       	ld	r20, Y
 390:	64 2b       	or	r22, r20
 392:	68 83       	st	Y, r22
 394:	31 96       	adiw	r30, 0x01	; 1
 396:	01 96       	adiw	r24, 0x01	; 1
 398:	11 96       	adiw	r26, 0x01	; 1
 39a:	df ef       	ldi	r29, 0xFF	; 255
 39c:	ed 1a       	sub	r14, r29
 39e:	fd 0a       	sbc	r15, r29
 3a0:	e4 30       	cpi	r30, 0x04	; 4
 3a2:	f1 05       	cpc	r31, r1
 3a4:	c9 f6       	brne	.-78     	; 0x358 <updateValues+0x1c>
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	ff 90       	pop	r15
 3b0:	ef 90       	pop	r14
 3b2:	08 95       	ret

000003b4 <calcMenu>:
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	96 df       	rcall	.-212    	; 0x2e4 <captureSingleKnob>
 3b8:	81 32       	cpi	r24, 0x21	; 33
 3ba:	20 f0       	brcs	.+8      	; 0x3c4 <calcMenu+0x10>
 3bc:	82 34       	cpi	r24, 0x42	; 66
 3be:	20 f0       	brcs	.+8      	; 0x3c8 <calcMenu+0x14>
 3c0:	88 e0       	ldi	r24, 0x08	; 8
 3c2:	08 95       	ret
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	08 95       	ret
 3c8:	85 e0       	ldi	r24, 0x05	; 5
 3ca:	08 95       	ret

000003cc <delay_ms>:
 3cc:	18 16       	cp	r1, r24
 3ce:	19 06       	cpc	r1, r25
 3d0:	5c f0       	brlt	.+22     	; 0x3e8 <delay_ms+0x1c>
 3d2:	08 95       	ret
 3d4:	00 00       	nop
 3d6:	21 50       	subi	r18, 0x01	; 1
 3d8:	31 09       	sbc	r19, r1
 3da:	e1 f7       	brne	.-8      	; 0x3d4 <delay_ms+0x8>
 3dc:	4f 5f       	subi	r20, 0xFF	; 255
 3de:	5f 4f       	sbci	r21, 0xFF	; 255
 3e0:	84 17       	cp	r24, r20
 3e2:	95 07       	cpc	r25, r21
 3e4:	19 f4       	brne	.+6      	; 0x3ec <delay_ms+0x20>
 3e6:	08 95       	ret
 3e8:	40 e0       	ldi	r20, 0x00	; 0
 3ea:	50 e0       	ldi	r21, 0x00	; 0
 3ec:	27 e0       	ldi	r18, 0x07	; 7
 3ee:	33 e0       	ldi	r19, 0x03	; 3
 3f0:	f1 cf       	rjmp	.-30     	; 0x3d4 <delay_ms+0x8>

000003f2 <LCD_WriteCommand>:
 3f2:	5f 98       	cbi	0x0b, 7	; 11
 3f4:	88 b9       	out	0x08, r24	; 8
 3f6:	5e 9a       	sbi	0x0b, 6	; 11
 3f8:	00 00       	nop
 3fa:	5e 98       	cbi	0x0b, 6	; 11
 3fc:	82 e0       	ldi	r24, 0x02	; 2
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	e5 cf       	rjmp	.-54     	; 0x3cc <delay_ms>
 402:	08 95       	ret

00000404 <LCD_ClearScreen>:
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	f5 cf       	rjmp	.-22     	; 0x3f2 <LCD_WriteCommand>
 408:	08 95       	ret

0000040a <LCD_Cursor>:
 40a:	81 31       	cpi	r24, 0x11	; 17
 40c:	18 f4       	brcc	.+6      	; 0x414 <LCD_Cursor+0xa>
 40e:	81 58       	subi	r24, 0x81	; 129
 410:	f0 cf       	rjmp	.-32     	; 0x3f2 <LCD_WriteCommand>
 412:	08 95       	ret
 414:	81 55       	subi	r24, 0x51	; 81
 416:	ed cf       	rjmp	.-38     	; 0x3f2 <LCD_WriteCommand>
 418:	08 95       	ret

0000041a <LCD_init>:
 41a:	84 e6       	ldi	r24, 0x64	; 100
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	d6 df       	rcall	.-84     	; 0x3cc <delay_ms>
 420:	88 e3       	ldi	r24, 0x38	; 56
 422:	e7 df       	rcall	.-50     	; 0x3f2 <LCD_WriteCommand>
 424:	86 e0       	ldi	r24, 0x06	; 6
 426:	e5 df       	rcall	.-54     	; 0x3f2 <LCD_WriteCommand>
 428:	8f e0       	ldi	r24, 0x0F	; 15
 42a:	e3 df       	rcall	.-58     	; 0x3f2 <LCD_WriteCommand>
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	e1 df       	rcall	.-62     	; 0x3f2 <LCD_WriteCommand>
 430:	8a e0       	ldi	r24, 0x0A	; 10
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	cb cf       	rjmp	.-106    	; 0x3cc <delay_ms>
 436:	08 95       	ret

00000438 <LCD_WriteData>:
 438:	5f 9a       	sbi	0x0b, 7	; 11
 43a:	88 b9       	out	0x08, r24	; 8
 43c:	5e 9a       	sbi	0x0b, 6	; 11
 43e:	00 00       	nop
 440:	5e 98       	cbi	0x0b, 6	; 11
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	c2 cf       	rjmp	.-124    	; 0x3cc <delay_ms>
 448:	08 95       	ret

0000044a <updateFilterParameter>:
 44a:	0f 93       	push	r16
 44c:	1f 93       	push	r17
 44e:	cf 93       	push	r28
 450:	8c 01       	movw	r16, r24
 452:	81 e1       	ldi	r24, 0x11	; 17
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	d9 df       	rcall	.-78     	; 0x40a <LCD_Cursor>
 458:	f8 01       	movw	r30, r16
 45a:	80 81       	ld	r24, Z
 45c:	cd ec       	ldi	r28, 0xCD	; 205
 45e:	8c 9f       	mul	r24, r28
 460:	81 2d       	mov	r24, r1
 462:	11 24       	eor	r1, r1
 464:	86 95       	lsr	r24
 466:	86 95       	lsr	r24
 468:	86 95       	lsr	r24
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	c0 96       	adiw	r24, 0x30	; 48
 46e:	e4 df       	rcall	.-56     	; 0x438 <LCD_WriteData>
 470:	82 e1       	ldi	r24, 0x12	; 18
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	ca df       	rcall	.-108    	; 0x40a <LCD_Cursor>
 476:	f8 01       	movw	r30, r16
 478:	80 81       	ld	r24, Z
 47a:	8c 9f       	mul	r24, r28
 47c:	91 2d       	mov	r25, r1
 47e:	11 24       	eor	r1, r1
 480:	96 95       	lsr	r25
 482:	96 95       	lsr	r25
 484:	96 95       	lsr	r25
 486:	99 0f       	add	r25, r25
 488:	29 2f       	mov	r18, r25
 48a:	22 0f       	add	r18, r18
 48c:	22 0f       	add	r18, r18
 48e:	92 0f       	add	r25, r18
 490:	89 1b       	sub	r24, r25
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	c0 96       	adiw	r24, 0x30	; 48
 496:	d0 df       	rcall	.-96     	; 0x438 <LCD_WriteData>
 498:	85 e1       	ldi	r24, 0x15	; 21
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	b6 df       	rcall	.-148    	; 0x40a <LCD_Cursor>
 49e:	f8 01       	movw	r30, r16
 4a0:	81 81       	ldd	r24, Z+1	; 0x01
 4a2:	8c 9f       	mul	r24, r28
 4a4:	81 2d       	mov	r24, r1
 4a6:	11 24       	eor	r1, r1
 4a8:	86 95       	lsr	r24
 4aa:	86 95       	lsr	r24
 4ac:	86 95       	lsr	r24
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	c0 96       	adiw	r24, 0x30	; 48
 4b2:	c2 df       	rcall	.-124    	; 0x438 <LCD_WriteData>
 4b4:	86 e1       	ldi	r24, 0x16	; 22
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	a8 df       	rcall	.-176    	; 0x40a <LCD_Cursor>
 4ba:	f8 01       	movw	r30, r16
 4bc:	81 81       	ldd	r24, Z+1	; 0x01
 4be:	8c 9f       	mul	r24, r28
 4c0:	c1 2d       	mov	r28, r1
 4c2:	11 24       	eor	r1, r1
 4c4:	c6 95       	lsr	r28
 4c6:	c6 95       	lsr	r28
 4c8:	c6 95       	lsr	r28
 4ca:	cc 0f       	add	r28, r28
 4cc:	9c 2f       	mov	r25, r28
 4ce:	99 0f       	add	r25, r25
 4d0:	99 0f       	add	r25, r25
 4d2:	c9 0f       	add	r28, r25
 4d4:	8c 1b       	sub	r24, r28
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	c0 96       	adiw	r24, 0x30	; 48
 4da:	ae df       	rcall	.-164    	; 0x438 <LCD_WriteData>
 4dc:	80 e0       	ldi	r24, 0x00	; 0
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	94 df       	rcall	.-216    	; 0x40a <LCD_Cursor>
 4e2:	cf 91       	pop	r28
 4e4:	1f 91       	pop	r17
 4e6:	0f 91       	pop	r16
 4e8:	08 95       	ret

000004ea <updateAmpParameter>:
 4ea:	df 92       	push	r13
 4ec:	ef 92       	push	r14
 4ee:	ff 92       	push	r15
 4f0:	0f 93       	push	r16
 4f2:	1f 93       	push	r17
 4f4:	cf 93       	push	r28
 4f6:	df 93       	push	r29
 4f8:	7c 01       	movw	r14, r24
 4fa:	01 e1       	ldi	r16, 0x11	; 17
 4fc:	10 e0       	ldi	r17, 0x00	; 0
 4fe:	0f 2e       	mov	r0, r31
 500:	fd ec       	ldi	r31, 0xCD	; 205
 502:	df 2e       	mov	r13, r31
 504:	f0 2d       	mov	r31, r0
 506:	f7 01       	movw	r30, r14
 508:	d1 91       	ld	r29, Z+
 50a:	7f 01       	movw	r14, r30
 50c:	c8 01       	movw	r24, r16
 50e:	7d df       	rcall	.-262    	; 0x40a <LCD_Cursor>
 510:	dd 9d       	mul	r29, r13
 512:	c1 2d       	mov	r28, r1
 514:	11 24       	eor	r1, r1
 516:	c6 95       	lsr	r28
 518:	c6 95       	lsr	r28
 51a:	c6 95       	lsr	r28
 51c:	80 e3       	ldi	r24, 0x30	; 48
 51e:	8c 0f       	add	r24, r28
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	8a df       	rcall	.-236    	; 0x438 <LCD_WriteData>
 524:	c8 01       	movw	r24, r16
 526:	01 96       	adiw	r24, 0x01	; 1
 528:	70 df       	rcall	.-288    	; 0x40a <LCD_Cursor>
 52a:	cc 0f       	add	r28, r28
 52c:	8c 2f       	mov	r24, r28
 52e:	88 0f       	add	r24, r24
 530:	88 0f       	add	r24, r24
 532:	c8 0f       	add	r28, r24
 534:	dc 1b       	sub	r29, r28
 536:	80 e3       	ldi	r24, 0x30	; 48
 538:	8d 0f       	add	r24, r29
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	7d df       	rcall	.-262    	; 0x438 <LCD_WriteData>
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	01 32       	cpi	r16, 0x21	; 33
 544:	11 05       	cpc	r17, r1
 546:	f9 f6       	brne	.-66     	; 0x506 <updateAmpParameter+0x1c>
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	5e df       	rcall	.-324    	; 0x40a <LCD_Cursor>
 54e:	df 91       	pop	r29
 550:	cf 91       	pop	r28
 552:	1f 91       	pop	r17
 554:	0f 91       	pop	r16
 556:	ff 90       	pop	r15
 558:	ef 90       	pop	r14
 55a:	df 90       	pop	r13
 55c:	08 95       	ret

0000055e <updateOscParameter>:
 55e:	ef 92       	push	r14
 560:	ff 92       	push	r15
 562:	0f 93       	push	r16
 564:	1f 93       	push	r17
 566:	cf 93       	push	r28
 568:	df 93       	push	r29
 56a:	00 d0       	rcall	.+0      	; 0x56c <updateOscParameter+0xe>
 56c:	1f 92       	push	r1
 56e:	cd b7       	in	r28, 0x3d	; 61
 570:	de b7       	in	r29, 0x3e	; 62
 572:	fc 01       	movw	r30, r24
 574:	80 81       	ld	r24, Z
 576:	81 32       	cpi	r24, 0x21	; 33
 578:	38 f4       	brcc	.+14     	; 0x588 <updateOscParameter+0x2a>
 57a:	83 e5       	ldi	r24, 0x53	; 83
 57c:	89 83       	std	Y+1, r24	; 0x01
 57e:	81 e4       	ldi	r24, 0x41	; 65
 580:	8a 83       	std	Y+2, r24	; 0x02
 582:	87 e5       	ldi	r24, 0x57	; 87
 584:	8b 83       	std	Y+3, r24	; 0x03
 586:	20 c0       	rjmp	.+64     	; 0x5c8 <updateOscParameter+0x6a>
 588:	82 34       	cpi	r24, 0x42	; 66
 58a:	38 f4       	brcc	.+14     	; 0x59a <updateOscParameter+0x3c>
 58c:	83 e5       	ldi	r24, 0x53	; 83
 58e:	89 83       	std	Y+1, r24	; 0x01
 590:	81 e5       	ldi	r24, 0x51	; 81
 592:	8a 83       	std	Y+2, r24	; 0x02
 594:	82 e5       	ldi	r24, 0x52	; 82
 596:	8b 83       	std	Y+3, r24	; 0x03
 598:	17 c0       	rjmp	.+46     	; 0x5c8 <updateOscParameter+0x6a>
 59a:	83 e5       	ldi	r24, 0x53	; 83
 59c:	89 83       	std	Y+1, r24	; 0x01
 59e:	89 e4       	ldi	r24, 0x49	; 73
 5a0:	8a 83       	std	Y+2, r24	; 0x02
 5a2:	8e e4       	ldi	r24, 0x4E	; 78
 5a4:	8b 83       	std	Y+3, r24	; 0x03
 5a6:	10 c0       	rjmp	.+32     	; 0x5c8 <updateOscParameter+0x6a>
 5a8:	c8 01       	movw	r24, r16
 5aa:	2f df       	rcall	.-418    	; 0x40a <LCD_Cursor>
 5ac:	f7 01       	movw	r30, r14
 5ae:	81 91       	ld	r24, Z+
 5b0:	7f 01       	movw	r14, r30
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	41 df       	rcall	.-382    	; 0x438 <LCD_WriteData>
 5b6:	0f 5f       	subi	r16, 0xFF	; 255
 5b8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ba:	04 31       	cpi	r16, 0x14	; 20
 5bc:	11 05       	cpc	r17, r1
 5be:	a1 f7       	brne	.-24     	; 0x5a8 <updateOscParameter+0x4a>
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	22 df       	rcall	.-444    	; 0x40a <LCD_Cursor>
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <updateOscParameter+0x76>
 5c8:	ce 01       	movw	r24, r28
 5ca:	01 96       	adiw	r24, 0x01	; 1
 5cc:	7c 01       	movw	r14, r24
 5ce:	01 e1       	ldi	r16, 0x11	; 17
 5d0:	10 e0       	ldi	r17, 0x00	; 0
 5d2:	ea cf       	rjmp	.-44     	; 0x5a8 <updateOscParameter+0x4a>
 5d4:	0f 90       	pop	r0
 5d6:	0f 90       	pop	r0
 5d8:	0f 90       	pop	r0
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	1f 91       	pop	r17
 5e0:	0f 91       	pop	r16
 5e2:	ff 90       	pop	r15
 5e4:	ef 90       	pop	r14
 5e6:	08 95       	ret

000005e8 <LCD_DisplayString>:
 5e8:	0f 93       	push	r16
 5ea:	1f 93       	push	r17
 5ec:	cf 93       	push	r28
 5ee:	df 93       	push	r29
 5f0:	18 2f       	mov	r17, r24
 5f2:	eb 01       	movw	r28, r22
 5f4:	07 df       	rcall	.-498    	; 0x404 <LCD_ClearScreen>
 5f6:	06 df       	rcall	.-500    	; 0x404 <LCD_ClearScreen>
 5f8:	88 81       	ld	r24, Y
 5fa:	88 23       	and	r24, r24
 5fc:	51 f0       	breq	.+20     	; 0x612 <LCD_DisplayString+0x2a>
 5fe:	01 e0       	ldi	r16, 0x01	; 1
 600:	01 0f       	add	r16, r17
 602:	81 2f       	mov	r24, r17
 604:	02 df       	rcall	.-508    	; 0x40a <LCD_Cursor>
 606:	89 91       	ld	r24, Y+
 608:	17 df       	rcall	.-466    	; 0x438 <LCD_WriteData>
 60a:	10 2f       	mov	r17, r16
 60c:	88 81       	ld	r24, Y
 60e:	81 11       	cpse	r24, r1
 610:	f6 cf       	rjmp	.-20     	; 0x5fe <LCD_DisplayString+0x16>
 612:	df 91       	pop	r29
 614:	cf 91       	pop	r28
 616:	1f 91       	pop	r17
 618:	0f 91       	pop	r16
 61a:	08 95       	ret

0000061c <menuTask>:
 61c:	1f 93       	push	r17
 61e:	cf 93       	push	r28
 620:	df 93       	push	r29
 622:	00 d0       	rcall	.+0      	; 0x624 <menuTask+0x8>
 624:	00 d0       	rcall	.+0      	; 0x626 <menuTask+0xa>
 626:	cd b7       	in	r28, 0x3d	; 61
 628:	de b7       	in	r29, 0x3e	; 62
 62a:	18 2f       	mov	r17, r24
 62c:	ce 01       	movw	r24, r28
 62e:	01 96       	adiw	r24, 0x01	; 1
 630:	65 de       	rcall	.-822    	; 0x2fc <getPotentiometerSnapshot>
 632:	81 2f       	mov	r24, r17
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	8b 30       	cpi	r24, 0x0B	; 11
 638:	91 05       	cpc	r25, r1
 63a:	08 f0       	brcs	.+2      	; 0x63e <menuTask+0x22>
 63c:	ab c0       	rjmp	.+342    	; 0x794 <menuTask+0x178>
 63e:	fc 01       	movw	r30, r24
 640:	ea 5b       	subi	r30, 0xBA	; 186
 642:	ff 4f       	sbci	r31, 0xFF	; 255
 644:	1e c3       	rjmp	.+1596   	; 0xc82 <__tablejump2__>
 646:	19 e0       	ldi	r17, 0x09	; 9
 648:	fc c0       	rjmp	.+504    	; 0x842 <menuTask+0x226>
 64a:	81 e0       	ldi	r24, 0x01	; 1
 64c:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <osc>
 650:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <filt>
 654:	e9 ea       	ldi	r30, 0xA9	; 169
 656:	f1 e0       	ldi	r31, 0x01	; 1
 658:	10 82       	st	Z, r1
 65a:	11 82       	std	Z+1, r1	; 0x01
 65c:	83 e6       	ldi	r24, 0x63	; 99
 65e:	82 83       	std	Z+2, r24	; 0x02
 660:	13 82       	std	Z+3, r1	; 0x03
 662:	a8 de       	rcall	.-688    	; 0x3b4 <calcMenu>
 664:	18 2f       	mov	r17, r24
 666:	9e c0       	rjmp	.+316    	; 0x7a4 <menuTask+0x188>
 668:	5a de       	rcall	.-844    	; 0x31e <isPressed>
 66a:	81 11       	cpse	r24, r1
 66c:	ea c0       	rjmp	.+468    	; 0x842 <menuTask+0x226>
 66e:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__data_end>
 672:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <previousMenuState>
 676:	86 30       	cpi	r24, 0x06	; 6
 678:	09 f4       	brne	.+2      	; 0x67c <menuTask+0x60>
 67a:	bf c0       	rjmp	.+382    	; 0x7fa <menuTask+0x1de>
 67c:	30 f4       	brcc	.+12     	; 0x68a <menuTask+0x6e>
 67e:	83 30       	cpi	r24, 0x03	; 3
 680:	09 f4       	brne	.+2      	; 0x684 <menuTask+0x68>
 682:	8f c0       	rjmp	.+286    	; 0x7a2 <menuTask+0x186>
 684:	84 30       	cpi	r24, 0x04	; 4
 686:	49 f0       	breq	.+18     	; 0x69a <menuTask+0x7e>
 688:	11 c0       	rjmp	.+34     	; 0x6ac <menuTask+0x90>
 68a:	89 30       	cpi	r24, 0x09	; 9
 68c:	09 f4       	brne	.+2      	; 0x690 <menuTask+0x74>
 68e:	ca c0       	rjmp	.+404    	; 0x824 <menuTask+0x208>
 690:	8a 30       	cpi	r24, 0x0A	; 10
 692:	49 f0       	breq	.+18     	; 0x6a6 <menuTask+0x8a>
 694:	87 30       	cpi	r24, 0x07	; 7
 696:	51 f4       	brne	.+20     	; 0x6ac <menuTask+0x90>
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <menuTask+0x84>
 69a:	8c de       	rcall	.-744    	; 0x3b4 <calcMenu>
 69c:	18 2f       	mov	r17, r24
 69e:	82 c0       	rjmp	.+260    	; 0x7a4 <menuTask+0x188>
 6a0:	89 de       	rcall	.-750    	; 0x3b4 <calcMenu>
 6a2:	18 2f       	mov	r17, r24
 6a4:	7f c0       	rjmp	.+254    	; 0x7a4 <menuTask+0x188>
 6a6:	86 de       	rcall	.-756    	; 0x3b4 <calcMenu>
 6a8:	18 2f       	mov	r17, r24
 6aa:	7c c0       	rjmp	.+248    	; 0x7a4 <menuTask+0x188>
 6ac:	64 e0       	ldi	r22, 0x04	; 4
 6ae:	71 e0       	ldi	r23, 0x01	; 1
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	9a df       	rcall	.-204    	; 0x5e8 <LCD_DisplayString>
 6b4:	c6 c0       	rjmp	.+396    	; 0x842 <menuTask+0x226>
 6b6:	7e de       	rcall	.-772    	; 0x3b4 <calcMenu>
 6b8:	82 30       	cpi	r24, 0x02	; 2
 6ba:	19 f0       	breq	.+6      	; 0x6c2 <menuTask+0xa6>
 6bc:	7b de       	rcall	.-778    	; 0x3b4 <calcMenu>
 6be:	18 2f       	mov	r17, r24
 6c0:	71 c0       	rjmp	.+226    	; 0x7a4 <menuTask+0x188>
 6c2:	2d de       	rcall	.-934    	; 0x31e <isPressed>
 6c4:	88 23       	and	r24, r24
 6c6:	09 f4       	brne	.+2      	; 0x6ca <menuTask+0xae>
 6c8:	bc c0       	rjmp	.+376    	; 0x842 <menuTask+0x226>
 6ca:	83 e0       	ldi	r24, 0x03	; 3
 6cc:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 6d0:	69 e1       	ldi	r22, 0x19	; 25
 6d2:	71 e0       	ldi	r23, 0x01	; 1
 6d4:	81 e0       	ldi	r24, 0x01	; 1
 6d6:	88 df       	rcall	.-240    	; 0x5e8 <LCD_DisplayString>
 6d8:	be 01       	movw	r22, r28
 6da:	6f 5f       	subi	r22, 0xFF	; 255
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8c eb       	ldi	r24, 0xBC	; 188
 6e0:	91 e0       	ldi	r25, 0x01	; 1
 6e2:	21 de       	rcall	.-958    	; 0x326 <copyValues>
 6e4:	8d ea       	ldi	r24, 0xAD	; 173
 6e6:	91 e0       	ldi	r25, 0x01	; 1
 6e8:	3a df       	rcall	.-396    	; 0x55e <updateOscParameter>
 6ea:	11 e0       	ldi	r17, 0x01	; 1
 6ec:	aa c0       	rjmp	.+340    	; 0x842 <menuTask+0x226>
 6ee:	17 de       	rcall	.-978    	; 0x31e <isPressed>
 6f0:	88 23       	and	r24, r24
 6f2:	09 f4       	brne	.+2      	; 0x6f6 <menuTask+0xda>
 6f4:	6d c0       	rjmp	.+218    	; 0x7d0 <menuTask+0x1b4>
 6f6:	84 e0       	ldi	r24, 0x04	; 4
 6f8:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 6fc:	11 e0       	ldi	r17, 0x01	; 1
 6fe:	a1 c0       	rjmp	.+322    	; 0x842 <menuTask+0x226>
 700:	59 de       	rcall	.-846    	; 0x3b4 <calcMenu>
 702:	85 30       	cpi	r24, 0x05	; 5
 704:	19 f0       	breq	.+6      	; 0x70c <menuTask+0xf0>
 706:	56 de       	rcall	.-852    	; 0x3b4 <calcMenu>
 708:	18 2f       	mov	r17, r24
 70a:	4c c0       	rjmp	.+152    	; 0x7a4 <menuTask+0x188>
 70c:	08 de       	rcall	.-1008   	; 0x31e <isPressed>
 70e:	88 23       	and	r24, r24
 710:	09 f4       	brne	.+2      	; 0x714 <menuTask+0xf8>
 712:	97 c0       	rjmp	.+302    	; 0x842 <menuTask+0x226>
 714:	86 e0       	ldi	r24, 0x06	; 6
 716:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 71a:	6d e1       	ldi	r22, 0x1D	; 29
 71c:	71 e0       	ldi	r23, 0x01	; 1
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	63 df       	rcall	.-314    	; 0x5e8 <LCD_DisplayString>
 722:	be 01       	movw	r22, r28
 724:	6f 5f       	subi	r22, 0xFF	; 255
 726:	7f 4f       	sbci	r23, 0xFF	; 255
 728:	8c eb       	ldi	r24, 0xBC	; 188
 72a:	91 e0       	ldi	r25, 0x01	; 1
 72c:	fc dd       	rcall	.-1032   	; 0x326 <copyValues>
 72e:	85 ea       	ldi	r24, 0xA5	; 165
 730:	91 e0       	ldi	r25, 0x01	; 1
 732:	8b de       	rcall	.-746    	; 0x44a <updateFilterParameter>
 734:	11 e0       	ldi	r17, 0x01	; 1
 736:	85 c0       	rjmp	.+266    	; 0x842 <menuTask+0x226>
 738:	f2 dd       	rcall	.-1052   	; 0x31e <isPressed>
 73a:	88 23       	and	r24, r24
 73c:	09 f4       	brne	.+2      	; 0x740 <menuTask+0x124>
 73e:	5d c0       	rjmp	.+186    	; 0x7fa <menuTask+0x1de>
 740:	87 e0       	ldi	r24, 0x07	; 7
 742:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 746:	11 e0       	ldi	r17, 0x01	; 1
 748:	7c c0       	rjmp	.+248    	; 0x842 <menuTask+0x226>
 74a:	34 de       	rcall	.-920    	; 0x3b4 <calcMenu>
 74c:	88 30       	cpi	r24, 0x08	; 8
 74e:	19 f0       	breq	.+6      	; 0x756 <menuTask+0x13a>
 750:	31 de       	rcall	.-926    	; 0x3b4 <calcMenu>
 752:	18 2f       	mov	r17, r24
 754:	27 c0       	rjmp	.+78     	; 0x7a4 <menuTask+0x188>
 756:	e3 dd       	rcall	.-1082   	; 0x31e <isPressed>
 758:	88 23       	and	r24, r24
 75a:	09 f4       	brne	.+2      	; 0x75e <menuTask+0x142>
 75c:	72 c0       	rjmp	.+228    	; 0x842 <menuTask+0x226>
 75e:	89 e0       	ldi	r24, 0x09	; 9
 760:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 764:	65 e2       	ldi	r22, 0x25	; 37
 766:	71 e0       	ldi	r23, 0x01	; 1
 768:	81 e0       	ldi	r24, 0x01	; 1
 76a:	3e df       	rcall	.-388    	; 0x5e8 <LCD_DisplayString>
 76c:	be 01       	movw	r22, r28
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8c eb       	ldi	r24, 0xBC	; 188
 774:	91 e0       	ldi	r25, 0x01	; 1
 776:	d7 dd       	rcall	.-1106   	; 0x326 <copyValues>
 778:	89 ea       	ldi	r24, 0xA9	; 169
 77a:	91 e0       	ldi	r25, 0x01	; 1
 77c:	b6 de       	rcall	.-660    	; 0x4ea <updateAmpParameter>
 77e:	11 e0       	ldi	r17, 0x01	; 1
 780:	60 c0       	rjmp	.+192    	; 0x842 <menuTask+0x226>
 782:	cd dd       	rcall	.-1126   	; 0x31e <isPressed>
 784:	88 23       	and	r24, r24
 786:	09 f4       	brne	.+2      	; 0x78a <menuTask+0x16e>
 788:	4d c0       	rjmp	.+154    	; 0x824 <menuTask+0x208>
 78a:	8a e0       	ldi	r24, 0x0A	; 10
 78c:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <previousMenuState>
 790:	11 e0       	ldi	r17, 0x01	; 1
 792:	57 c0       	rjmp	.+174    	; 0x842 <menuTask+0x226>
 794:	63 e3       	ldi	r22, 0x33	; 51
 796:	71 e0       	ldi	r23, 0x01	; 1
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	26 df       	rcall	.-436    	; 0x5e8 <LCD_DisplayString>
 79c:	03 c0       	rjmp	.+6      	; 0x7a4 <menuTask+0x188>
 79e:	13 e0       	ldi	r17, 0x03	; 3
 7a0:	01 c0       	rjmp	.+2      	; 0x7a4 <menuTask+0x188>
 7a2:	14 e0       	ldi	r17, 0x04	; 4
 7a4:	15 30       	cpi	r17, 0x05	; 5
 7a6:	11 f1       	breq	.+68     	; 0x7ec <menuTask+0x1d0>
 7a8:	28 f4       	brcc	.+10     	; 0x7b4 <menuTask+0x198>
 7aa:	12 30       	cpi	r17, 0x02	; 2
 7ac:	51 f0       	breq	.+20     	; 0x7c2 <menuTask+0x1a6>
 7ae:	14 30       	cpi	r17, 0x04	; 4
 7b0:	79 f0       	breq	.+30     	; 0x7d0 <menuTask+0x1b4>
 7b2:	47 c0       	rjmp	.+142    	; 0x842 <menuTask+0x226>
 7b4:	18 30       	cpi	r17, 0x08	; 8
 7b6:	79 f1       	breq	.+94     	; 0x816 <menuTask+0x1fa>
 7b8:	1a 30       	cpi	r17, 0x0A	; 10
 7ba:	a1 f1       	breq	.+104    	; 0x824 <menuTask+0x208>
 7bc:	17 30       	cpi	r17, 0x07	; 7
 7be:	e9 f0       	breq	.+58     	; 0x7fa <menuTask+0x1de>
 7c0:	40 c0       	rjmp	.+128    	; 0x842 <menuTask+0x226>
 7c2:	65 e5       	ldi	r22, 0x55	; 85
 7c4:	71 e0       	ldi	r23, 0x01	; 1
 7c6:	81 e0       	ldi	r24, 0x01	; 1
 7c8:	0f df       	rcall	.-482    	; 0x5e8 <LCD_DisplayString>
 7ca:	80 e0       	ldi	r24, 0x00	; 0
 7cc:	1e de       	rcall	.-964    	; 0x40a <LCD_Cursor>
 7ce:	39 c0       	rjmp	.+114    	; 0x842 <menuTask+0x226>
 7d0:	2e e7       	ldi	r18, 0x7E	; 126
 7d2:	31 e0       	ldi	r19, 0x01	; 1
 7d4:	4d ea       	ldi	r20, 0xAD	; 173
 7d6:	51 e0       	ldi	r21, 0x01	; 1
 7d8:	6c eb       	ldi	r22, 0xBC	; 188
 7da:	71 e0       	ldi	r23, 0x01	; 1
 7dc:	ce 01       	movw	r24, r28
 7de:	01 96       	adiw	r24, 0x01	; 1
 7e0:	ad dd       	rcall	.-1190   	; 0x33c <updateValues>
 7e2:	8d ea       	ldi	r24, 0xAD	; 173
 7e4:	91 e0       	ldi	r25, 0x01	; 1
 7e6:	bb de       	rcall	.-650    	; 0x55e <updateOscParameter>
 7e8:	14 e0       	ldi	r17, 0x04	; 4
 7ea:	2b c0       	rjmp	.+86     	; 0x842 <menuTask+0x226>
 7ec:	64 e6       	ldi	r22, 0x64	; 100
 7ee:	71 e0       	ldi	r23, 0x01	; 1
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	fa de       	rcall	.-524    	; 0x5e8 <LCD_DisplayString>
 7f4:	80 e0       	ldi	r24, 0x00	; 0
 7f6:	09 de       	rcall	.-1006   	; 0x40a <LCD_Cursor>
 7f8:	24 c0       	rjmp	.+72     	; 0x842 <menuTask+0x226>
 7fa:	2e e7       	ldi	r18, 0x7E	; 126
 7fc:	31 e0       	ldi	r19, 0x01	; 1
 7fe:	45 ea       	ldi	r20, 0xA5	; 165
 800:	51 e0       	ldi	r21, 0x01	; 1
 802:	6c eb       	ldi	r22, 0xBC	; 188
 804:	71 e0       	ldi	r23, 0x01	; 1
 806:	ce 01       	movw	r24, r28
 808:	01 96       	adiw	r24, 0x01	; 1
 80a:	98 dd       	rcall	.-1232   	; 0x33c <updateValues>
 80c:	85 ea       	ldi	r24, 0xA5	; 165
 80e:	91 e0       	ldi	r25, 0x01	; 1
 810:	1c de       	rcall	.-968    	; 0x44a <updateFilterParameter>
 812:	17 e0       	ldi	r17, 0x07	; 7
 814:	16 c0       	rjmp	.+44     	; 0x842 <menuTask+0x226>
 816:	60 e7       	ldi	r22, 0x70	; 112
 818:	71 e0       	ldi	r23, 0x01	; 1
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	e5 de       	rcall	.-566    	; 0x5e8 <LCD_DisplayString>
 81e:	80 e0       	ldi	r24, 0x00	; 0
 820:	f4 dd       	rcall	.-1048   	; 0x40a <LCD_Cursor>
 822:	0f c0       	rjmp	.+30     	; 0x842 <menuTask+0x226>
 824:	2e e7       	ldi	r18, 0x7E	; 126
 826:	31 e0       	ldi	r19, 0x01	; 1
 828:	49 ea       	ldi	r20, 0xA9	; 169
 82a:	51 e0       	ldi	r21, 0x01	; 1
 82c:	6c eb       	ldi	r22, 0xBC	; 188
 82e:	71 e0       	ldi	r23, 0x01	; 1
 830:	ce 01       	movw	r24, r28
 832:	01 96       	adiw	r24, 0x01	; 1
 834:	83 dd       	rcall	.-1274   	; 0x33c <updateValues>
 836:	89 ea       	ldi	r24, 0xA9	; 169
 838:	91 e0       	ldi	r25, 0x01	; 1
 83a:	57 de       	rcall	.-850    	; 0x4ea <updateAmpParameter>
 83c:	1a e0       	ldi	r17, 0x0A	; 10
 83e:	01 c0       	rjmp	.+2      	; 0x842 <menuTask+0x226>
 840:	16 e0       	ldi	r17, 0x06	; 6
 842:	81 2f       	mov	r24, r17
 844:	0f 90       	pop	r0
 846:	0f 90       	pop	r0
 848:	0f 90       	pop	r0
 84a:	0f 90       	pop	r0
 84c:	df 91       	pop	r29
 84e:	cf 91       	pop	r28
 850:	1f 91       	pop	r17
 852:	08 95       	ret

00000854 <initExtern>:
		while(!TimerFlag);
	}
}

void initExtern(){
	TimerFlag = 0;
 854:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <TimerFlag>
	_avr_timer_cntcurr = 0;
 858:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <_avr_timer_cntcurr>
 85c:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <_avr_timer_cntcurr+0x1>
 860:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <_avr_timer_cntcurr+0x2>
 864:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <_avr_timer_cntcurr+0x3>
	_avr_timer_M = 0;
 868:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 86c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
 870:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_start+0x2>
 874:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_start+0x3>
 878:	08 95       	ret

0000087a <main>:
unsigned char menuTask(unsigned char);	//states defined in menu.h
unsigned char usartTask(unsigned char);

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;	//potentiometer inputs
 87a:	11 b8       	out	0x01, r1	; 1
 87c:	8f ef       	ldi	r24, 0xFF	; 255
 87e:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;	
 880:	84 b9       	out	0x04, r24	; 4
 882:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;	//LCD data out
 884:	87 b9       	out	0x07, r24	; 7
 886:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;	//bits 6 and 4 input Rx in || everything else is output. Tx and LCD control
 888:	8a b9       	out	0x0a, r24	; 10
 88a:	1b b8       	out	0x0b, r1	; 11
	
	initExtern();
 88c:	e3 df       	rcall	.-58     	; 0x854 <initExtern>
	/////////////////////////////////////////////////////////////////////////
	
	unsigned char i = 0x00;
	unsigned char taskCount = 1;
	
	tasks[0] = menu;
 88e:	8b e0       	ldi	r24, 0x0B	; 11
 890:	e4 e8       	ldi	r30, 0x84	; 132
 892:	f1 e0       	ldi	r31, 0x01	; 1
 894:	af e8       	ldi	r26, 0x8F	; 143
 896:	b1 e0       	ldi	r27, 0x01	; 1
 898:	01 90       	ld	r0, Z+
 89a:	0d 92       	st	X+, r0
 89c:	8a 95       	dec	r24
 89e:	e1 f7       	brne	.-8      	; 0x898 <main+0x1e>
	tasks[0].period = menuPeriod;
 8a0:	cf e8       	ldi	r28, 0x8F	; 143
 8a2:	d1 e0       	ldi	r29, 0x01	; 1
 8a4:	41 e0       	ldi	r20, 0x01	; 1
 8a6:	50 e0       	ldi	r21, 0x00	; 0
 8a8:	60 e0       	ldi	r22, 0x00	; 0
 8aa:	70 e0       	ldi	r23, 0x00	; 0
 8ac:	48 83       	st	Y, r20
 8ae:	59 83       	std	Y+1, r21	; 0x01
 8b0:	6a 83       	std	Y+2, r22	; 0x02
 8b2:	7b 83       	std	Y+3, r23	; 0x03
	tasks[0].state = 0;
 8b4:	18 86       	std	Y+8, r1	; 0x08
	tasks[0].elapsedTime = 0;
 8b6:	1c 82       	std	Y+4, r1	; 0x04
 8b8:	1d 82       	std	Y+5, r1	; 0x05
 8ba:	1e 82       	std	Y+6, r1	; 0x06
 8bc:	1f 82       	std	Y+7, r1	; 0x07
	tasks[0].TickFunction = &menuTask;
 8be:	8e e0       	ldi	r24, 0x0E	; 14
 8c0:	93 e0       	ldi	r25, 0x03	; 3
 8c2:	9a 87       	std	Y+10, r25	; 0x0a
 8c4:	89 87       	std	Y+9, r24	; 0x09
	
	tasks[1] = usart;
 8c6:	8b e0       	ldi	r24, 0x0B	; 11
 8c8:	e1 eb       	ldi	r30, 0xB1	; 177
 8ca:	f1 e0       	ldi	r31, 0x01	; 1
 8cc:	aa e9       	ldi	r26, 0x9A	; 154
 8ce:	b1 e0       	ldi	r27, 0x01	; 1
 8d0:	01 90       	ld	r0, Z+
 8d2:	0d 92       	st	X+, r0
 8d4:	8a 95       	dec	r24
 8d6:	e1 f7       	brne	.-8      	; 0x8d0 <main+0x56>
	tasks[1].period = usartPeriod;
 8d8:	4b 87       	std	Y+11, r20	; 0x0b
 8da:	5c 87       	std	Y+12, r21	; 0x0c
 8dc:	6d 87       	std	Y+13, r22	; 0x0d
 8de:	7e 87       	std	Y+14, r23	; 0x0e
	tasks[1].state = 0;
 8e0:	1b 8a       	std	Y+19, r1	; 0x13
	tasks[1].elapsedTime = 0;
 8e2:	1f 86       	std	Y+15, r1	; 0x0f
 8e4:	18 8a       	std	Y+16, r1	; 0x10
 8e6:	19 8a       	std	Y+17, r1	; 0x11
 8e8:	1a 8a       	std	Y+18, r1	; 0x12
	tasks[1].TickFunction = &usartTask;
 8ea:	82 ee       	ldi	r24, 0xE2	; 226
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	9d 8b       	std	Y+21, r25	; 0x15
 8f0:	8c 8b       	std	Y+20, r24	; 0x14

#include <util/delay.h>
#define F_CPU 16000000UL

void ADC_init() {
	ADCSRA = (1 << ADEN) | (1 << ADSC) | (1 << ADATE);	//0x06 MIGHT FIX PROBLEM
 8f2:	80 ee       	ldi	r24, 0xE0	; 224
 8f4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	
	ADC_init();		//init ADC
	LCD_init();		//init LCD
	initUSART();	//init USART communications
 8f8:	90 dd       	rcall	.-1248   	; 0x41a <LCD_init>
 8fa:	f1 db       	rcall	.-2078   	; 0xde <initUSART>
	TimerSet(GCD);	//set timer interrupt cycle period
 8fc:	62 e3       	ldi	r22, 0x32	; 50
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	80 e0       	ldi	r24, 0x00	; 0
 902:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();		//enable timer
 904:	ca dc       	rcall	.-1644   	; 0x29a <TimerSet>
 906:	6b dc       	rcall	.-1834   	; 0x1de <TimerOn>
 908:	0f 2e       	mov	r0, r31
 90a:	f5 ea       	ldi	r31, 0xA5	; 165
 90c:	ef 2e       	mov	r14, r31
 90e:	f1 e0       	ldi	r31, 0x01	; 1
 910:	ff 2e       	mov	r15, r31
 912:	f0 2d       	mov	r31, r0
 914:	cf e8       	ldi	r28, 0x8F	; 143
 916:	d1 e0       	ldi	r29, 0x01	; 1
 918:	8e 01       	movw	r16, r28
	
	while (1)
	{
		for(i = 0; i < NUM_OF_TASKS; i++){
			if(tasks[i].elapsedTime >= tasks[i].period){
 91a:	4c 81       	ldd	r20, Y+4	; 0x04
 91c:	5d 81       	ldd	r21, Y+5	; 0x05
 91e:	6e 81       	ldd	r22, Y+6	; 0x06
 920:	7f 81       	ldd	r23, Y+7	; 0x07
 922:	88 81       	ld	r24, Y
 924:	99 81       	ldd	r25, Y+1	; 0x01
 926:	aa 81       	ldd	r26, Y+2	; 0x02
 928:	bb 81       	ldd	r27, Y+3	; 0x03
 92a:	48 17       	cp	r20, r24
 92c:	59 07       	cpc	r21, r25
 92e:	6a 07       	cpc	r22, r26
 930:	7b 07       	cpc	r23, r27
 932:	48 f0       	brcs	.+18     	; 0x946 <main+0xcc>
				tasks[i].state = tasks[i].TickFunction(tasks[i].state);
 934:	e9 85       	ldd	r30, Y+9	; 0x09
 936:	fa 85       	ldd	r31, Y+10	; 0x0a
 938:	88 85       	ldd	r24, Y+8	; 0x08
 93a:	09 95       	icall
 93c:	88 87       	std	Y+8, r24	; 0x08
				tasks[i].elapsedTime = 0;
 93e:	1c 82       	std	Y+4, r1	; 0x04
 940:	1d 82       	std	Y+5, r1	; 0x05
 942:	1e 82       	std	Y+6, r1	; 0x06
 944:	1f 82       	std	Y+7, r1	; 0x07
			}
			tasks[i].elapsedTime += 1;
 946:	f8 01       	movw	r30, r16
 948:	84 81       	ldd	r24, Z+4	; 0x04
 94a:	95 81       	ldd	r25, Z+5	; 0x05
 94c:	a6 81       	ldd	r26, Z+6	; 0x06
 94e:	b7 81       	ldd	r27, Z+7	; 0x07
 950:	01 96       	adiw	r24, 0x01	; 1
 952:	a1 1d       	adc	r26, r1
 954:	b1 1d       	adc	r27, r1
 956:	84 83       	std	Z+4, r24	; 0x04
 958:	95 83       	std	Z+5, r25	; 0x05
 95a:	a6 83       	std	Z+6, r26	; 0x06
 95c:	b7 83       	std	Z+7, r27	; 0x07
 95e:	2b 96       	adiw	r28, 0x0b	; 11
	TimerSet(GCD);	//set timer interrupt cycle period
	TimerOn();		//enable timer
	
	while (1)
	{
		for(i = 0; i < NUM_OF_TASKS; i++){
 960:	ce 15       	cp	r28, r14
 962:	df 05       	cpc	r29, r15
 964:	c9 f6       	brne	.-78     	; 0x918 <main+0x9e>
				tasks[i].state = tasks[i].TickFunction(tasks[i].state);
				tasks[i].elapsedTime = 0;
			}
			tasks[i].elapsedTime += 1;
		}
		TimerFlag = 0;
 966:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <TimerFlag>
		while(!TimerFlag);
 96a:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <TimerFlag>
 96e:	88 23       	and	r24, r24
 970:	e1 f3       	breq	.-8      	; 0x96a <main+0xf0>
 972:	d0 cf       	rjmp	.-96     	; 0x914 <main+0x9a>

00000974 <__subsf3>:
 974:	50 58       	subi	r21, 0x80	; 128

00000976 <__addsf3>:
 976:	bb 27       	eor	r27, r27
 978:	aa 27       	eor	r26, r26
 97a:	0e d0       	rcall	.+28     	; 0x998 <__addsf3x>
 97c:	48 c1       	rjmp	.+656    	; 0xc0e <__fp_round>
 97e:	39 d1       	rcall	.+626    	; 0xbf2 <__fp_pscA>
 980:	30 f0       	brcs	.+12     	; 0x98e <__addsf3+0x18>
 982:	3e d1       	rcall	.+636    	; 0xc00 <__fp_pscB>
 984:	20 f0       	brcs	.+8      	; 0x98e <__addsf3+0x18>
 986:	31 f4       	brne	.+12     	; 0x994 <__addsf3+0x1e>
 988:	9f 3f       	cpi	r25, 0xFF	; 255
 98a:	11 f4       	brne	.+4      	; 0x990 <__addsf3+0x1a>
 98c:	1e f4       	brtc	.+6      	; 0x994 <__addsf3+0x1e>
 98e:	2e c1       	rjmp	.+604    	; 0xbec <__fp_nan>
 990:	0e f4       	brtc	.+2      	; 0x994 <__addsf3+0x1e>
 992:	e0 95       	com	r30
 994:	e7 fb       	bst	r30, 7
 996:	24 c1       	rjmp	.+584    	; 0xbe0 <__fp_inf>

00000998 <__addsf3x>:
 998:	e9 2f       	mov	r30, r25
 99a:	4a d1       	rcall	.+660    	; 0xc30 <__fp_split3>
 99c:	80 f3       	brcs	.-32     	; 0x97e <__addsf3+0x8>
 99e:	ba 17       	cp	r27, r26
 9a0:	62 07       	cpc	r22, r18
 9a2:	73 07       	cpc	r23, r19
 9a4:	84 07       	cpc	r24, r20
 9a6:	95 07       	cpc	r25, r21
 9a8:	18 f0       	brcs	.+6      	; 0x9b0 <__addsf3x+0x18>
 9aa:	71 f4       	brne	.+28     	; 0x9c8 <__addsf3x+0x30>
 9ac:	9e f5       	brtc	.+102    	; 0xa14 <__addsf3x+0x7c>
 9ae:	62 c1       	rjmp	.+708    	; 0xc74 <__fp_zero>
 9b0:	0e f4       	brtc	.+2      	; 0x9b4 <__addsf3x+0x1c>
 9b2:	e0 95       	com	r30
 9b4:	0b 2e       	mov	r0, r27
 9b6:	ba 2f       	mov	r27, r26
 9b8:	a0 2d       	mov	r26, r0
 9ba:	0b 01       	movw	r0, r22
 9bc:	b9 01       	movw	r22, r18
 9be:	90 01       	movw	r18, r0
 9c0:	0c 01       	movw	r0, r24
 9c2:	ca 01       	movw	r24, r20
 9c4:	a0 01       	movw	r20, r0
 9c6:	11 24       	eor	r1, r1
 9c8:	ff 27       	eor	r31, r31
 9ca:	59 1b       	sub	r21, r25
 9cc:	99 f0       	breq	.+38     	; 0x9f4 <__addsf3x+0x5c>
 9ce:	59 3f       	cpi	r21, 0xF9	; 249
 9d0:	50 f4       	brcc	.+20     	; 0x9e6 <__addsf3x+0x4e>
 9d2:	50 3e       	cpi	r21, 0xE0	; 224
 9d4:	68 f1       	brcs	.+90     	; 0xa30 <__addsf3x+0x98>
 9d6:	1a 16       	cp	r1, r26
 9d8:	f0 40       	sbci	r31, 0x00	; 0
 9da:	a2 2f       	mov	r26, r18
 9dc:	23 2f       	mov	r18, r19
 9de:	34 2f       	mov	r19, r20
 9e0:	44 27       	eor	r20, r20
 9e2:	58 5f       	subi	r21, 0xF8	; 248
 9e4:	f3 cf       	rjmp	.-26     	; 0x9cc <__addsf3x+0x34>
 9e6:	46 95       	lsr	r20
 9e8:	37 95       	ror	r19
 9ea:	27 95       	ror	r18
 9ec:	a7 95       	ror	r26
 9ee:	f0 40       	sbci	r31, 0x00	; 0
 9f0:	53 95       	inc	r21
 9f2:	c9 f7       	brne	.-14     	; 0x9e6 <__addsf3x+0x4e>
 9f4:	7e f4       	brtc	.+30     	; 0xa14 <__addsf3x+0x7c>
 9f6:	1f 16       	cp	r1, r31
 9f8:	ba 0b       	sbc	r27, r26
 9fa:	62 0b       	sbc	r22, r18
 9fc:	73 0b       	sbc	r23, r19
 9fe:	84 0b       	sbc	r24, r20
 a00:	ba f0       	brmi	.+46     	; 0xa30 <__addsf3x+0x98>
 a02:	91 50       	subi	r25, 0x01	; 1
 a04:	a1 f0       	breq	.+40     	; 0xa2e <__addsf3x+0x96>
 a06:	ff 0f       	add	r31, r31
 a08:	bb 1f       	adc	r27, r27
 a0a:	66 1f       	adc	r22, r22
 a0c:	77 1f       	adc	r23, r23
 a0e:	88 1f       	adc	r24, r24
 a10:	c2 f7       	brpl	.-16     	; 0xa02 <__addsf3x+0x6a>
 a12:	0e c0       	rjmp	.+28     	; 0xa30 <__addsf3x+0x98>
 a14:	ba 0f       	add	r27, r26
 a16:	62 1f       	adc	r22, r18
 a18:	73 1f       	adc	r23, r19
 a1a:	84 1f       	adc	r24, r20
 a1c:	48 f4       	brcc	.+18     	; 0xa30 <__addsf3x+0x98>
 a1e:	87 95       	ror	r24
 a20:	77 95       	ror	r23
 a22:	67 95       	ror	r22
 a24:	b7 95       	ror	r27
 a26:	f7 95       	ror	r31
 a28:	9e 3f       	cpi	r25, 0xFE	; 254
 a2a:	08 f0       	brcs	.+2      	; 0xa2e <__addsf3x+0x96>
 a2c:	b3 cf       	rjmp	.-154    	; 0x994 <__addsf3+0x1e>
 a2e:	93 95       	inc	r25
 a30:	88 0f       	add	r24, r24
 a32:	08 f0       	brcs	.+2      	; 0xa36 <__addsf3x+0x9e>
 a34:	99 27       	eor	r25, r25
 a36:	ee 0f       	add	r30, r30
 a38:	97 95       	ror	r25
 a3a:	87 95       	ror	r24
 a3c:	08 95       	ret

00000a3e <__divsf3>:
 a3e:	0c d0       	rcall	.+24     	; 0xa58 <__divsf3x>
 a40:	e6 c0       	rjmp	.+460    	; 0xc0e <__fp_round>
 a42:	de d0       	rcall	.+444    	; 0xc00 <__fp_pscB>
 a44:	40 f0       	brcs	.+16     	; 0xa56 <__divsf3+0x18>
 a46:	d5 d0       	rcall	.+426    	; 0xbf2 <__fp_pscA>
 a48:	30 f0       	brcs	.+12     	; 0xa56 <__divsf3+0x18>
 a4a:	21 f4       	brne	.+8      	; 0xa54 <__divsf3+0x16>
 a4c:	5f 3f       	cpi	r21, 0xFF	; 255
 a4e:	19 f0       	breq	.+6      	; 0xa56 <__divsf3+0x18>
 a50:	c7 c0       	rjmp	.+398    	; 0xbe0 <__fp_inf>
 a52:	51 11       	cpse	r21, r1
 a54:	10 c1       	rjmp	.+544    	; 0xc76 <__fp_szero>
 a56:	ca c0       	rjmp	.+404    	; 0xbec <__fp_nan>

00000a58 <__divsf3x>:
 a58:	eb d0       	rcall	.+470    	; 0xc30 <__fp_split3>
 a5a:	98 f3       	brcs	.-26     	; 0xa42 <__divsf3+0x4>

00000a5c <__divsf3_pse>:
 a5c:	99 23       	and	r25, r25
 a5e:	c9 f3       	breq	.-14     	; 0xa52 <__divsf3+0x14>
 a60:	55 23       	and	r21, r21
 a62:	b1 f3       	breq	.-20     	; 0xa50 <__divsf3+0x12>
 a64:	95 1b       	sub	r25, r21
 a66:	55 0b       	sbc	r21, r21
 a68:	bb 27       	eor	r27, r27
 a6a:	aa 27       	eor	r26, r26
 a6c:	62 17       	cp	r22, r18
 a6e:	73 07       	cpc	r23, r19
 a70:	84 07       	cpc	r24, r20
 a72:	38 f0       	brcs	.+14     	; 0xa82 <__divsf3_pse+0x26>
 a74:	9f 5f       	subi	r25, 0xFF	; 255
 a76:	5f 4f       	sbci	r21, 0xFF	; 255
 a78:	22 0f       	add	r18, r18
 a7a:	33 1f       	adc	r19, r19
 a7c:	44 1f       	adc	r20, r20
 a7e:	aa 1f       	adc	r26, r26
 a80:	a9 f3       	breq	.-22     	; 0xa6c <__divsf3_pse+0x10>
 a82:	33 d0       	rcall	.+102    	; 0xaea <__divsf3_pse+0x8e>
 a84:	0e 2e       	mov	r0, r30
 a86:	3a f0       	brmi	.+14     	; 0xa96 <__divsf3_pse+0x3a>
 a88:	e0 e8       	ldi	r30, 0x80	; 128
 a8a:	30 d0       	rcall	.+96     	; 0xaec <__divsf3_pse+0x90>
 a8c:	91 50       	subi	r25, 0x01	; 1
 a8e:	50 40       	sbci	r21, 0x00	; 0
 a90:	e6 95       	lsr	r30
 a92:	00 1c       	adc	r0, r0
 a94:	ca f7       	brpl	.-14     	; 0xa88 <__divsf3_pse+0x2c>
 a96:	29 d0       	rcall	.+82     	; 0xaea <__divsf3_pse+0x8e>
 a98:	fe 2f       	mov	r31, r30
 a9a:	27 d0       	rcall	.+78     	; 0xaea <__divsf3_pse+0x8e>
 a9c:	66 0f       	add	r22, r22
 a9e:	77 1f       	adc	r23, r23
 aa0:	88 1f       	adc	r24, r24
 aa2:	bb 1f       	adc	r27, r27
 aa4:	26 17       	cp	r18, r22
 aa6:	37 07       	cpc	r19, r23
 aa8:	48 07       	cpc	r20, r24
 aaa:	ab 07       	cpc	r26, r27
 aac:	b0 e8       	ldi	r27, 0x80	; 128
 aae:	09 f0       	breq	.+2      	; 0xab2 <__divsf3_pse+0x56>
 ab0:	bb 0b       	sbc	r27, r27
 ab2:	80 2d       	mov	r24, r0
 ab4:	bf 01       	movw	r22, r30
 ab6:	ff 27       	eor	r31, r31
 ab8:	93 58       	subi	r25, 0x83	; 131
 aba:	5f 4f       	sbci	r21, 0xFF	; 255
 abc:	2a f0       	brmi	.+10     	; 0xac8 <__divsf3_pse+0x6c>
 abe:	9e 3f       	cpi	r25, 0xFE	; 254
 ac0:	51 05       	cpc	r21, r1
 ac2:	68 f0       	brcs	.+26     	; 0xade <__divsf3_pse+0x82>
 ac4:	8d c0       	rjmp	.+282    	; 0xbe0 <__fp_inf>
 ac6:	d7 c0       	rjmp	.+430    	; 0xc76 <__fp_szero>
 ac8:	5f 3f       	cpi	r21, 0xFF	; 255
 aca:	ec f3       	brlt	.-6      	; 0xac6 <__divsf3_pse+0x6a>
 acc:	98 3e       	cpi	r25, 0xE8	; 232
 ace:	dc f3       	brlt	.-10     	; 0xac6 <__divsf3_pse+0x6a>
 ad0:	86 95       	lsr	r24
 ad2:	77 95       	ror	r23
 ad4:	67 95       	ror	r22
 ad6:	b7 95       	ror	r27
 ad8:	f7 95       	ror	r31
 ada:	9f 5f       	subi	r25, 0xFF	; 255
 adc:	c9 f7       	brne	.-14     	; 0xad0 <__divsf3_pse+0x74>
 ade:	88 0f       	add	r24, r24
 ae0:	91 1d       	adc	r25, r1
 ae2:	96 95       	lsr	r25
 ae4:	87 95       	ror	r24
 ae6:	97 f9       	bld	r25, 7
 ae8:	08 95       	ret
 aea:	e1 e0       	ldi	r30, 0x01	; 1
 aec:	66 0f       	add	r22, r22
 aee:	77 1f       	adc	r23, r23
 af0:	88 1f       	adc	r24, r24
 af2:	bb 1f       	adc	r27, r27
 af4:	62 17       	cp	r22, r18
 af6:	73 07       	cpc	r23, r19
 af8:	84 07       	cpc	r24, r20
 afa:	ba 07       	cpc	r27, r26
 afc:	20 f0       	brcs	.+8      	; 0xb06 <__divsf3_pse+0xaa>
 afe:	62 1b       	sub	r22, r18
 b00:	73 0b       	sbc	r23, r19
 b02:	84 0b       	sbc	r24, r20
 b04:	ba 0b       	sbc	r27, r26
 b06:	ee 1f       	adc	r30, r30
 b08:	88 f7       	brcc	.-30     	; 0xaec <__divsf3_pse+0x90>
 b0a:	e0 95       	com	r30
 b0c:	08 95       	ret

00000b0e <__fixunssfsi>:
 b0e:	98 d0       	rcall	.+304    	; 0xc40 <__fp_splitA>
 b10:	88 f0       	brcs	.+34     	; 0xb34 <__fixunssfsi+0x26>
 b12:	9f 57       	subi	r25, 0x7F	; 127
 b14:	90 f0       	brcs	.+36     	; 0xb3a <__fixunssfsi+0x2c>
 b16:	b9 2f       	mov	r27, r25
 b18:	99 27       	eor	r25, r25
 b1a:	b7 51       	subi	r27, 0x17	; 23
 b1c:	a0 f0       	brcs	.+40     	; 0xb46 <__fixunssfsi+0x38>
 b1e:	d1 f0       	breq	.+52     	; 0xb54 <__fixunssfsi+0x46>
 b20:	66 0f       	add	r22, r22
 b22:	77 1f       	adc	r23, r23
 b24:	88 1f       	adc	r24, r24
 b26:	99 1f       	adc	r25, r25
 b28:	1a f0       	brmi	.+6      	; 0xb30 <__fixunssfsi+0x22>
 b2a:	ba 95       	dec	r27
 b2c:	c9 f7       	brne	.-14     	; 0xb20 <__fixunssfsi+0x12>
 b2e:	12 c0       	rjmp	.+36     	; 0xb54 <__fixunssfsi+0x46>
 b30:	b1 30       	cpi	r27, 0x01	; 1
 b32:	81 f0       	breq	.+32     	; 0xb54 <__fixunssfsi+0x46>
 b34:	9f d0       	rcall	.+318    	; 0xc74 <__fp_zero>
 b36:	b1 e0       	ldi	r27, 0x01	; 1
 b38:	08 95       	ret
 b3a:	9c c0       	rjmp	.+312    	; 0xc74 <__fp_zero>
 b3c:	67 2f       	mov	r22, r23
 b3e:	78 2f       	mov	r23, r24
 b40:	88 27       	eor	r24, r24
 b42:	b8 5f       	subi	r27, 0xF8	; 248
 b44:	39 f0       	breq	.+14     	; 0xb54 <__fixunssfsi+0x46>
 b46:	b9 3f       	cpi	r27, 0xF9	; 249
 b48:	cc f3       	brlt	.-14     	; 0xb3c <__fixunssfsi+0x2e>
 b4a:	86 95       	lsr	r24
 b4c:	77 95       	ror	r23
 b4e:	67 95       	ror	r22
 b50:	b3 95       	inc	r27
 b52:	d9 f7       	brne	.-10     	; 0xb4a <__fixunssfsi+0x3c>
 b54:	3e f4       	brtc	.+14     	; 0xb64 <__fixunssfsi+0x56>
 b56:	90 95       	com	r25
 b58:	80 95       	com	r24
 b5a:	70 95       	com	r23
 b5c:	61 95       	neg	r22
 b5e:	7f 4f       	sbci	r23, 0xFF	; 255
 b60:	8f 4f       	sbci	r24, 0xFF	; 255
 b62:	9f 4f       	sbci	r25, 0xFF	; 255
 b64:	08 95       	ret

00000b66 <__floatunsisf>:
 b66:	e8 94       	clt
 b68:	09 c0       	rjmp	.+18     	; 0xb7c <__floatsisf+0x12>

00000b6a <__floatsisf>:
 b6a:	97 fb       	bst	r25, 7
 b6c:	3e f4       	brtc	.+14     	; 0xb7c <__floatsisf+0x12>
 b6e:	90 95       	com	r25
 b70:	80 95       	com	r24
 b72:	70 95       	com	r23
 b74:	61 95       	neg	r22
 b76:	7f 4f       	sbci	r23, 0xFF	; 255
 b78:	8f 4f       	sbci	r24, 0xFF	; 255
 b7a:	9f 4f       	sbci	r25, 0xFF	; 255
 b7c:	99 23       	and	r25, r25
 b7e:	a9 f0       	breq	.+42     	; 0xbaa <__floatsisf+0x40>
 b80:	f9 2f       	mov	r31, r25
 b82:	96 e9       	ldi	r25, 0x96	; 150
 b84:	bb 27       	eor	r27, r27
 b86:	93 95       	inc	r25
 b88:	f6 95       	lsr	r31
 b8a:	87 95       	ror	r24
 b8c:	77 95       	ror	r23
 b8e:	67 95       	ror	r22
 b90:	b7 95       	ror	r27
 b92:	f1 11       	cpse	r31, r1
 b94:	f8 cf       	rjmp	.-16     	; 0xb86 <__floatsisf+0x1c>
 b96:	fa f4       	brpl	.+62     	; 0xbd6 <__floatsisf+0x6c>
 b98:	bb 0f       	add	r27, r27
 b9a:	11 f4       	brne	.+4      	; 0xba0 <__floatsisf+0x36>
 b9c:	60 ff       	sbrs	r22, 0
 b9e:	1b c0       	rjmp	.+54     	; 0xbd6 <__floatsisf+0x6c>
 ba0:	6f 5f       	subi	r22, 0xFF	; 255
 ba2:	7f 4f       	sbci	r23, 0xFF	; 255
 ba4:	8f 4f       	sbci	r24, 0xFF	; 255
 ba6:	9f 4f       	sbci	r25, 0xFF	; 255
 ba8:	16 c0       	rjmp	.+44     	; 0xbd6 <__floatsisf+0x6c>
 baa:	88 23       	and	r24, r24
 bac:	11 f0       	breq	.+4      	; 0xbb2 <__floatsisf+0x48>
 bae:	96 e9       	ldi	r25, 0x96	; 150
 bb0:	11 c0       	rjmp	.+34     	; 0xbd4 <__floatsisf+0x6a>
 bb2:	77 23       	and	r23, r23
 bb4:	21 f0       	breq	.+8      	; 0xbbe <__floatsisf+0x54>
 bb6:	9e e8       	ldi	r25, 0x8E	; 142
 bb8:	87 2f       	mov	r24, r23
 bba:	76 2f       	mov	r23, r22
 bbc:	05 c0       	rjmp	.+10     	; 0xbc8 <__floatsisf+0x5e>
 bbe:	66 23       	and	r22, r22
 bc0:	71 f0       	breq	.+28     	; 0xbde <__floatsisf+0x74>
 bc2:	96 e8       	ldi	r25, 0x86	; 134
 bc4:	86 2f       	mov	r24, r22
 bc6:	70 e0       	ldi	r23, 0x00	; 0
 bc8:	60 e0       	ldi	r22, 0x00	; 0
 bca:	2a f0       	brmi	.+10     	; 0xbd6 <__floatsisf+0x6c>
 bcc:	9a 95       	dec	r25
 bce:	66 0f       	add	r22, r22
 bd0:	77 1f       	adc	r23, r23
 bd2:	88 1f       	adc	r24, r24
 bd4:	da f7       	brpl	.-10     	; 0xbcc <__floatsisf+0x62>
 bd6:	88 0f       	add	r24, r24
 bd8:	96 95       	lsr	r25
 bda:	87 95       	ror	r24
 bdc:	97 f9       	bld	r25, 7
 bde:	08 95       	ret

00000be0 <__fp_inf>:
 be0:	97 f9       	bld	r25, 7
 be2:	9f 67       	ori	r25, 0x7F	; 127
 be4:	80 e8       	ldi	r24, 0x80	; 128
 be6:	70 e0       	ldi	r23, 0x00	; 0
 be8:	60 e0       	ldi	r22, 0x00	; 0
 bea:	08 95       	ret

00000bec <__fp_nan>:
 bec:	9f ef       	ldi	r25, 0xFF	; 255
 bee:	80 ec       	ldi	r24, 0xC0	; 192
 bf0:	08 95       	ret

00000bf2 <__fp_pscA>:
 bf2:	00 24       	eor	r0, r0
 bf4:	0a 94       	dec	r0
 bf6:	16 16       	cp	r1, r22
 bf8:	17 06       	cpc	r1, r23
 bfa:	18 06       	cpc	r1, r24
 bfc:	09 06       	cpc	r0, r25
 bfe:	08 95       	ret

00000c00 <__fp_pscB>:
 c00:	00 24       	eor	r0, r0
 c02:	0a 94       	dec	r0
 c04:	12 16       	cp	r1, r18
 c06:	13 06       	cpc	r1, r19
 c08:	14 06       	cpc	r1, r20
 c0a:	05 06       	cpc	r0, r21
 c0c:	08 95       	ret

00000c0e <__fp_round>:
 c0e:	09 2e       	mov	r0, r25
 c10:	03 94       	inc	r0
 c12:	00 0c       	add	r0, r0
 c14:	11 f4       	brne	.+4      	; 0xc1a <__fp_round+0xc>
 c16:	88 23       	and	r24, r24
 c18:	52 f0       	brmi	.+20     	; 0xc2e <__fp_round+0x20>
 c1a:	bb 0f       	add	r27, r27
 c1c:	40 f4       	brcc	.+16     	; 0xc2e <__fp_round+0x20>
 c1e:	bf 2b       	or	r27, r31
 c20:	11 f4       	brne	.+4      	; 0xc26 <__fp_round+0x18>
 c22:	60 ff       	sbrs	r22, 0
 c24:	04 c0       	rjmp	.+8      	; 0xc2e <__fp_round+0x20>
 c26:	6f 5f       	subi	r22, 0xFF	; 255
 c28:	7f 4f       	sbci	r23, 0xFF	; 255
 c2a:	8f 4f       	sbci	r24, 0xFF	; 255
 c2c:	9f 4f       	sbci	r25, 0xFF	; 255
 c2e:	08 95       	ret

00000c30 <__fp_split3>:
 c30:	57 fd       	sbrc	r21, 7
 c32:	90 58       	subi	r25, 0x80	; 128
 c34:	44 0f       	add	r20, r20
 c36:	55 1f       	adc	r21, r21
 c38:	59 f0       	breq	.+22     	; 0xc50 <__fp_splitA+0x10>
 c3a:	5f 3f       	cpi	r21, 0xFF	; 255
 c3c:	71 f0       	breq	.+28     	; 0xc5a <__fp_splitA+0x1a>
 c3e:	47 95       	ror	r20

00000c40 <__fp_splitA>:
 c40:	88 0f       	add	r24, r24
 c42:	97 fb       	bst	r25, 7
 c44:	99 1f       	adc	r25, r25
 c46:	61 f0       	breq	.+24     	; 0xc60 <__fp_splitA+0x20>
 c48:	9f 3f       	cpi	r25, 0xFF	; 255
 c4a:	79 f0       	breq	.+30     	; 0xc6a <__fp_splitA+0x2a>
 c4c:	87 95       	ror	r24
 c4e:	08 95       	ret
 c50:	12 16       	cp	r1, r18
 c52:	13 06       	cpc	r1, r19
 c54:	14 06       	cpc	r1, r20
 c56:	55 1f       	adc	r21, r21
 c58:	f2 cf       	rjmp	.-28     	; 0xc3e <__fp_split3+0xe>
 c5a:	46 95       	lsr	r20
 c5c:	f1 df       	rcall	.-30     	; 0xc40 <__fp_splitA>
 c5e:	08 c0       	rjmp	.+16     	; 0xc70 <__fp_splitA+0x30>
 c60:	16 16       	cp	r1, r22
 c62:	17 06       	cpc	r1, r23
 c64:	18 06       	cpc	r1, r24
 c66:	99 1f       	adc	r25, r25
 c68:	f1 cf       	rjmp	.-30     	; 0xc4c <__fp_splitA+0xc>
 c6a:	86 95       	lsr	r24
 c6c:	71 05       	cpc	r23, r1
 c6e:	61 05       	cpc	r22, r1
 c70:	08 94       	sec
 c72:	08 95       	ret

00000c74 <__fp_zero>:
 c74:	e8 94       	clt

00000c76 <__fp_szero>:
 c76:	bb 27       	eor	r27, r27
 c78:	66 27       	eor	r22, r22
 c7a:	77 27       	eor	r23, r23
 c7c:	cb 01       	movw	r24, r22
 c7e:	97 f9       	bld	r25, 7
 c80:	08 95       	ret

00000c82 <__tablejump2__>:
 c82:	ee 0f       	add	r30, r30
 c84:	ff 1f       	adc	r31, r31
 c86:	00 24       	eor	r0, r0
 c88:	00 1c       	adc	r0, r0
 c8a:	0b be       	out	0x3b, r0	; 59
 c8c:	07 90       	elpm	r0, Z+
 c8e:	f6 91       	elpm	r31, Z
 c90:	e0 2d       	mov	r30, r0
 c92:	09 94       	ijmp

00000c94 <_exit>:
 c94:	f8 94       	cli

00000c96 <__stop_program>:
 c96:	ff cf       	rjmp	.-2      	; 0xc96 <__stop_program>
