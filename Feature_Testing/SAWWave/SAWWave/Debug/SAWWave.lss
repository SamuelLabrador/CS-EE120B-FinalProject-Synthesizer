
SAWWave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000005fe  00000692  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  00000696  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a6e  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f0  00000000  00000000  000011c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000037b  00000000  00000000  00001ab6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00001e34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  00001f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000279  00000000  00000000  000023f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000266c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c0       	rjmp	.+218    	; 0x110 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ef       	ldi	r30, 0xFE	; 254
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 30       	cpi	r26, 0x09	; 9
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	af d0       	rcall	.+350    	; 0x222 <main>
  c4:	9a c2       	rjmp	.+1332   	; 0x5fa <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
void TimerOff(){
	TCCR1B = 0x00;
}

void TimerISR(){
	TimerFlag = 1;
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ce:	8a ef       	ldi	r24, 0xFA	; 250
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
  f8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
  fc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 100:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 104:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <__vector_13>:
}

ISR(TIMER1_COMPA_vect){
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 122:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 126:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 12a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 12e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	a1 09       	sbc	r26, r1
 136:	b1 09       	sbc	r27, r1
 138:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 13c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 140:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 144:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	if(_avr_timer_cntcurr == 0){
 148:	89 2b       	or	r24, r25
 14a:	8a 2b       	or	r24, r26
 14c:	8b 2b       	or	r24, r27
 14e:	99 f4       	brne	.+38     	; 0x176 <__vector_13+0x66>
void TimerOff(){
	TCCR1B = 0x00;
}

void TimerISR(){
	TimerFlag = 1;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>

ISR(TIMER1_COMPA_vect){
	_avr_timer_cntcurr--;
	if(_avr_timer_cntcurr == 0){
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 166:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 16a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 16e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 172:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	}
}
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <TimerSet>:

void TimerSet(unsigned long M){
	_avr_timer_M = M;
 188:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 18c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 190:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 194:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 198:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 19c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 1a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 1a4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 1a8:	08 95       	ret

000001aa <fillArray>:
		while(!TimerFlag);
		TimerFlag = 0;
	}
}

void fillArray(unsigned short *array){
 1aa:	cf 92       	push	r12
 1ac:	df 92       	push	r13
 1ae:	ef 92       	push	r14
 1b0:	ff 92       	push	r15
 1b2:	0f 93       	push	r16
 1b4:	1f 93       	push	r17
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	ec 01       	movw	r28, r24
 1bc:	8c 01       	movw	r16, r24
 1be:	00 5f       	subi	r16, 0xF0	; 240
 1c0:	18 4d       	sbci	r17, 0xD8	; 216

	double amplitude = 5.0;
	double timePassed = 0.0;
 1c2:	c1 2c       	mov	r12, r1
 1c4:	d1 2c       	mov	r13, r1
 1c6:	76 01       	movw	r14, r12
	double phase = 0;
	double delta_T = (double)(1.0 / (double)(SAMPLE_RATE));
	unsigned short i = 0x00;

	for(i = 0; i < SAMPLE_RATE; i++){	//sample rate is used
		array[i] = (short)(amplitude * frequency * fmod((timePassed + phase), (1/frequency)) * VOLTAGE_SCALER);
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	a9 01       	movw	r20, r18
 1ce:	c7 01       	movw	r24, r14
 1d0:	b6 01       	movw	r22, r12
 1d2:	6e d0       	rcall	.+220    	; 0x2b0 <__addsf3>
 1d4:	2a e0       	ldi	r18, 0x0A	; 10
 1d6:	37 ed       	ldi	r19, 0xD7	; 215
 1d8:	43 ea       	ldi	r20, 0xA3	; 163
 1da:	5c e3       	ldi	r21, 0x3C	; 60
 1dc:	05 d1       	rcall	.+522    	; 0x3e8 <fmod>
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	4a e7       	ldi	r20, 0x7A	; 122
 1e4:	53 e4       	ldi	r21, 0x43	; 67
 1e6:	a6 d1       	rcall	.+844    	; 0x534 <__mulsf3>
 1e8:	20 e0       	ldi	r18, 0x00	; 0
 1ea:	3c ec       	ldi	r19, 0xCC	; 204
 1ec:	4c e4       	ldi	r20, 0x4C	; 76
 1ee:	56 e4       	ldi	r21, 0x46	; 70
 1f0:	a1 d1       	rcall	.+834    	; 0x534 <__mulsf3>
 1f2:	c2 d0       	rcall	.+388    	; 0x378 <__fixsfsi>
 1f4:	69 93       	st	Y+, r22
 1f6:	79 93       	st	Y+, r23
		timePassed += delta_T;
 1f8:	27 e1       	ldi	r18, 0x17	; 23
 1fa:	37 eb       	ldi	r19, 0xB7	; 183
 1fc:	41 e5       	ldi	r20, 0x51	; 81
 1fe:	59 e3       	ldi	r21, 0x39	; 57
 200:	c7 01       	movw	r24, r14
 202:	b6 01       	movw	r22, r12
 204:	55 d0       	rcall	.+170    	; 0x2b0 <__addsf3>
 206:	6b 01       	movw	r12, r22
 208:	7c 01       	movw	r14, r24
	double timePassed = 0.0;
	double phase = 0;
	double delta_T = (double)(1.0 / (double)(SAMPLE_RATE));
	unsigned short i = 0x00;

	for(i = 0; i < SAMPLE_RATE; i++){	//sample rate is used
 20a:	c0 17       	cp	r28, r16
 20c:	d1 07       	cpc	r29, r17
 20e:	e1 f6       	brne	.-72     	; 0x1c8 <fillArray+0x1e>
		array[i] = (short)(amplitude * frequency * fmod((timePassed + phase), (1/frequency)) * VOLTAGE_SCALER);
		timePassed += delta_T;
	}
	return;
}
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	0f 91       	pop	r16
 218:	ff 90       	pop	r15
 21a:	ef 90       	pop	r14
 21c:	df 90       	pop	r13
 21e:	cf 90       	pop	r12
 220:	08 95       	ret

00000222 <main>:
#define SAMPLE_PERIOD (unsigned long)(100000 / SAMPLE_RATE)		//1 second = 100000 ticks
#define VOLTAGE_SCALER (unsigned short)(13107)
#define frequency (double)(50)

int main(void)
{
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	c0 51       	subi	r28, 0x10	; 16
 22c:	d7 42       	sbci	r29, 0x27	; 39
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	f8 94       	cli
 232:	de bf       	out	0x3e, r29	; 62
 234:	0f be       	out	0x3f, r0	; 63
 236:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF; PORTA = 0x00;
 238:	8f ef       	ldi	r24, 0xFF	; 255
 23a:	81 b9       	out	0x01, r24	; 1
 23c:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00;
 23e:	84 b9       	out	0x04, r24	; 4
 240:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
 242:	87 b9       	out	0x07, r24	; 7
 244:	18 b8       	out	0x08, r1	; 8
	
	unsigned short waveArray[SAMPLE_RATE];
	fillArray(waveArray);
 246:	ce 01       	movw	r24, r28
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	af df       	rcall	.-162    	; 0x1aa <fillArray>
	
	TimerOn();
 24c:	3d df       	rcall	.-390    	; 0xc8 <TimerOn>
 24e:	64 e1       	ldi	r22, 0x14	; 20
	TimerSet(SAMPLE_PERIOD);
 250:	70 e0       	ldi	r23, 0x00	; 0
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	98 df       	rcall	.-208    	; 0x188 <TimerSet>
 258:	40 e0       	ldi	r20, 0x00	; 0
	
	unsigned short output = 0x00;
	unsigned char lights = 0xFF;
	unsigned short timer = 0x00;
 25a:	50 e0       	ldi	r21, 0x00	; 0
 25c:	6f ef       	ldi	r22, 0xFF	; 255
	
	TimerOn();
	TimerSet(SAMPLE_PERIOD);
	
	unsigned short output = 0x00;
	unsigned char lights = 0xFF;
 25e:	21 e0       	ldi	r18, 0x01	; 1
	unsigned short arrSize = sizeof(waveArray)/sizeof(waveArray[0]);
	
	while (1)
	{
		
		i++;
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <main+0x46>
 264:	20 e0       	ldi	r18, 0x00	; 0
		if(i == SAMPLE_RATE){
			i = 0;
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	f9 01       	movw	r30, r18
		}
		output = (unsigned short)waveArray[i];
 26a:	ee 0f       	add	r30, r30
 26c:	ff 1f       	adc	r31, r31
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	8c 0f       	add	r24, r28
 274:	9d 1f       	adc	r25, r29
 276:	e8 0f       	add	r30, r24
 278:	f9 1f       	adc	r31, r25
 27a:	90 81       	ld	r25, Z
 27c:	81 81       	ldd	r24, Z+1	; 0x01
 27e:	4f 5f       	subi	r20, 0xFF	; 255
		
		timer++;
 280:	5f 4f       	sbci	r21, 0xFF	; 255
 282:	44 31       	cpi	r20, 0x14	; 20
		if(timer == SAMPLE_PERIOD){		//TODO CHANGE
 284:	51 05       	cpc	r21, r1
 286:	19 f4       	brne	.+6      	; 0x28e <main+0x6c>
 288:	60 95       	com	r22
			timer = 0;
			lights = ~lights;
 28a:	40 e0       	ldi	r20, 0x00	; 0
		}
		output = (unsigned short)waveArray[i];
		
		timer++;
		if(timer == SAMPLE_PERIOD){		//TODO CHANGE
			timer = 0;
 28c:	50 e0       	ldi	r21, 0x00	; 0
 28e:	92 b9       	out	0x02, r25	; 2
			lights = ~lights;
		}
		
		PORTA = (char)(output);
 290:	85 b9       	out	0x05, r24	; 5
		PORTB = (char)(output >> 8);
 292:	68 b9       	out	0x08, r22	; 8
		PORTC = lights;
 294:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
		
		while(!TimerFlag);
 298:	88 23       	and	r24, r24
 29a:	e1 f3       	breq	.-8      	; 0x294 <main+0x72>
 29c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
		TimerFlag = 0;
 2a0:	2f 5f       	subi	r18, 0xFF	; 255
	unsigned short arrSize = sizeof(waveArray)/sizeof(waveArray[0]);
	
	while (1)
	{
		
		i++;
 2a2:	3f 4f       	sbci	r19, 0xFF	; 255
 2a4:	28 38       	cpi	r18, 0x88	; 136
		if(i == SAMPLE_RATE){
 2a6:	93 e1       	ldi	r25, 0x13	; 19
 2a8:	39 07       	cpc	r19, r25
 2aa:	f1 f6       	brne	.-68     	; 0x268 <main+0x46>
 2ac:	db cf       	rjmp	.-74     	; 0x264 <main+0x42>

000002ae <__subsf3>:
 2ae:	50 58       	subi	r21, 0x80	; 128

000002b0 <__addsf3>:
 2b0:	bb 27       	eor	r27, r27
 2b2:	aa 27       	eor	r26, r26
 2b4:	0e d0       	rcall	.+28     	; 0x2d2 <__addsf3x>
 2b6:	04 c1       	rjmp	.+520    	; 0x4c0 <__fp_round>
 2b8:	f5 d0       	rcall	.+490    	; 0x4a4 <__fp_pscA>
 2ba:	30 f0       	brcs	.+12     	; 0x2c8 <__addsf3+0x18>
 2bc:	fa d0       	rcall	.+500    	; 0x4b2 <__fp_pscB>
 2be:	20 f0       	brcs	.+8      	; 0x2c8 <__addsf3+0x18>
 2c0:	31 f4       	brne	.+12     	; 0x2ce <__addsf3+0x1e>
 2c2:	9f 3f       	cpi	r25, 0xFF	; 255
 2c4:	11 f4       	brne	.+4      	; 0x2ca <__addsf3+0x1a>
 2c6:	1e f4       	brtc	.+6      	; 0x2ce <__addsf3+0x1e>
 2c8:	ea c0       	rjmp	.+468    	; 0x49e <__fp_nan>
 2ca:	0e f4       	brtc	.+2      	; 0x2ce <__addsf3+0x1e>
 2cc:	e0 95       	com	r30
 2ce:	e7 fb       	bst	r30, 7
 2d0:	d2 c0       	rjmp	.+420    	; 0x476 <__fp_inf>

000002d2 <__addsf3x>:
 2d2:	e9 2f       	mov	r30, r25
 2d4:	06 d1       	rcall	.+524    	; 0x4e2 <__fp_split3>
 2d6:	80 f3       	brcs	.-32     	; 0x2b8 <__addsf3+0x8>
 2d8:	ba 17       	cp	r27, r26
 2da:	62 07       	cpc	r22, r18
 2dc:	73 07       	cpc	r23, r19
 2de:	84 07       	cpc	r24, r20
 2e0:	95 07       	cpc	r25, r21
 2e2:	18 f0       	brcs	.+6      	; 0x2ea <__addsf3x+0x18>
 2e4:	71 f4       	brne	.+28     	; 0x302 <__addsf3x+0x30>
 2e6:	9e f5       	brtc	.+102    	; 0x34e <__addsf3x+0x7c>
 2e8:	1e c1       	rjmp	.+572    	; 0x526 <__fp_zero>
 2ea:	0e f4       	brtc	.+2      	; 0x2ee <__addsf3x+0x1c>
 2ec:	e0 95       	com	r30
 2ee:	0b 2e       	mov	r0, r27
 2f0:	ba 2f       	mov	r27, r26
 2f2:	a0 2d       	mov	r26, r0
 2f4:	0b 01       	movw	r0, r22
 2f6:	b9 01       	movw	r22, r18
 2f8:	90 01       	movw	r18, r0
 2fa:	0c 01       	movw	r0, r24
 2fc:	ca 01       	movw	r24, r20
 2fe:	a0 01       	movw	r20, r0
 300:	11 24       	eor	r1, r1
 302:	ff 27       	eor	r31, r31
 304:	59 1b       	sub	r21, r25
 306:	99 f0       	breq	.+38     	; 0x32e <__addsf3x+0x5c>
 308:	59 3f       	cpi	r21, 0xF9	; 249
 30a:	50 f4       	brcc	.+20     	; 0x320 <__addsf3x+0x4e>
 30c:	50 3e       	cpi	r21, 0xE0	; 224
 30e:	68 f1       	brcs	.+90     	; 0x36a <__addsf3x+0x98>
 310:	1a 16       	cp	r1, r26
 312:	f0 40       	sbci	r31, 0x00	; 0
 314:	a2 2f       	mov	r26, r18
 316:	23 2f       	mov	r18, r19
 318:	34 2f       	mov	r19, r20
 31a:	44 27       	eor	r20, r20
 31c:	58 5f       	subi	r21, 0xF8	; 248
 31e:	f3 cf       	rjmp	.-26     	; 0x306 <__addsf3x+0x34>
 320:	46 95       	lsr	r20
 322:	37 95       	ror	r19
 324:	27 95       	ror	r18
 326:	a7 95       	ror	r26
 328:	f0 40       	sbci	r31, 0x00	; 0
 32a:	53 95       	inc	r21
 32c:	c9 f7       	brne	.-14     	; 0x320 <__addsf3x+0x4e>
 32e:	7e f4       	brtc	.+30     	; 0x34e <__addsf3x+0x7c>
 330:	1f 16       	cp	r1, r31
 332:	ba 0b       	sbc	r27, r26
 334:	62 0b       	sbc	r22, r18
 336:	73 0b       	sbc	r23, r19
 338:	84 0b       	sbc	r24, r20
 33a:	ba f0       	brmi	.+46     	; 0x36a <__addsf3x+0x98>
 33c:	91 50       	subi	r25, 0x01	; 1
 33e:	a1 f0       	breq	.+40     	; 0x368 <__addsf3x+0x96>
 340:	ff 0f       	add	r31, r31
 342:	bb 1f       	adc	r27, r27
 344:	66 1f       	adc	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	88 1f       	adc	r24, r24
 34a:	c2 f7       	brpl	.-16     	; 0x33c <__addsf3x+0x6a>
 34c:	0e c0       	rjmp	.+28     	; 0x36a <__addsf3x+0x98>
 34e:	ba 0f       	add	r27, r26
 350:	62 1f       	adc	r22, r18
 352:	73 1f       	adc	r23, r19
 354:	84 1f       	adc	r24, r20
 356:	48 f4       	brcc	.+18     	; 0x36a <__addsf3x+0x98>
 358:	87 95       	ror	r24
 35a:	77 95       	ror	r23
 35c:	67 95       	ror	r22
 35e:	b7 95       	ror	r27
 360:	f7 95       	ror	r31
 362:	9e 3f       	cpi	r25, 0xFE	; 254
 364:	08 f0       	brcs	.+2      	; 0x368 <__addsf3x+0x96>
 366:	b3 cf       	rjmp	.-154    	; 0x2ce <__addsf3+0x1e>
 368:	93 95       	inc	r25
 36a:	88 0f       	add	r24, r24
 36c:	08 f0       	brcs	.+2      	; 0x370 <__addsf3x+0x9e>
 36e:	99 27       	eor	r25, r25
 370:	ee 0f       	add	r30, r30
 372:	97 95       	ror	r25
 374:	87 95       	ror	r24
 376:	08 95       	ret

00000378 <__fixsfsi>:
 378:	04 d0       	rcall	.+8      	; 0x382 <__fixunssfsi>
 37a:	68 94       	set
 37c:	b1 11       	cpse	r27, r1
 37e:	d4 c0       	rjmp	.+424    	; 0x528 <__fp_szero>
 380:	08 95       	ret

00000382 <__fixunssfsi>:
 382:	b7 d0       	rcall	.+366    	; 0x4f2 <__fp_splitA>
 384:	88 f0       	brcs	.+34     	; 0x3a8 <__fixunssfsi+0x26>
 386:	9f 57       	subi	r25, 0x7F	; 127
 388:	90 f0       	brcs	.+36     	; 0x3ae <__fixunssfsi+0x2c>
 38a:	b9 2f       	mov	r27, r25
 38c:	99 27       	eor	r25, r25
 38e:	b7 51       	subi	r27, 0x17	; 23
 390:	a0 f0       	brcs	.+40     	; 0x3ba <__fixunssfsi+0x38>
 392:	d1 f0       	breq	.+52     	; 0x3c8 <__fixunssfsi+0x46>
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	88 1f       	adc	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	1a f0       	brmi	.+6      	; 0x3a4 <__fixunssfsi+0x22>
 39e:	ba 95       	dec	r27
 3a0:	c9 f7       	brne	.-14     	; 0x394 <__fixunssfsi+0x12>
 3a2:	12 c0       	rjmp	.+36     	; 0x3c8 <__fixunssfsi+0x46>
 3a4:	b1 30       	cpi	r27, 0x01	; 1
 3a6:	81 f0       	breq	.+32     	; 0x3c8 <__fixunssfsi+0x46>
 3a8:	be d0       	rcall	.+380    	; 0x526 <__fp_zero>
 3aa:	b1 e0       	ldi	r27, 0x01	; 1
 3ac:	08 95       	ret
 3ae:	bb c0       	rjmp	.+374    	; 0x526 <__fp_zero>
 3b0:	67 2f       	mov	r22, r23
 3b2:	78 2f       	mov	r23, r24
 3b4:	88 27       	eor	r24, r24
 3b6:	b8 5f       	subi	r27, 0xF8	; 248
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <__fixunssfsi+0x46>
 3ba:	b9 3f       	cpi	r27, 0xF9	; 249
 3bc:	cc f3       	brlt	.-14     	; 0x3b0 <__fixunssfsi+0x2e>
 3be:	86 95       	lsr	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b3 95       	inc	r27
 3c6:	d9 f7       	brne	.-10     	; 0x3be <__fixunssfsi+0x3c>
 3c8:	3e f4       	brtc	.+14     	; 0x3d8 <__fixunssfsi+0x56>
 3ca:	90 95       	com	r25
 3cc:	80 95       	com	r24
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret
 3da:	64 d0       	rcall	.+200    	; 0x4a4 <__fp_pscA>
 3dc:	18 f0       	brcs	.+6      	; 0x3e4 <__fixunssfsi+0x62>
 3de:	11 f0       	breq	.+4      	; 0x3e4 <__fixunssfsi+0x62>
 3e0:	68 d0       	rcall	.+208    	; 0x4b2 <__fp_pscB>
 3e2:	38 f4       	brcc	.+14     	; 0x3f2 <fmod+0xa>
 3e4:	5c c0       	rjmp	.+184    	; 0x49e <__fp_nan>
 3e6:	a0 c0       	rjmp	.+320    	; 0x528 <__fp_szero>

000003e8 <fmod>:
 3e8:	e9 2f       	mov	r30, r25
 3ea:	7b d0       	rcall	.+246    	; 0x4e2 <__fp_split3>
 3ec:	b0 f3       	brcs	.-20     	; 0x3da <__fixunssfsi+0x58>
 3ee:	55 23       	and	r21, r21
 3f0:	c9 f3       	breq	.-14     	; 0x3e4 <__fixunssfsi+0x62>
 3f2:	e7 fb       	bst	r30, 7
 3f4:	62 17       	cp	r22, r18
 3f6:	73 07       	cpc	r23, r19
 3f8:	84 07       	cpc	r24, r20
 3fa:	95 07       	cpc	r25, r21
 3fc:	a8 f1       	brcs	.+106    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 3fe:	99 f3       	breq	.-26     	; 0x3e6 <__fixunssfsi+0x64>
 400:	e9 2f       	mov	r30, r25
 402:	ff 27       	eor	r31, r31
 404:	88 23       	and	r24, r24
 406:	2a f0       	brmi	.+10     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 408:	31 97       	sbiw	r30, 0x01	; 1
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	da f7       	brpl	.-10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 412:	95 2f       	mov	r25, r21
 414:	55 27       	eor	r21, r21
 416:	44 23       	and	r20, r20
 418:	32 f0       	brmi	.+12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41a:	91 50       	subi	r25, 0x01	; 1
 41c:	50 40       	sbci	r21, 0x00	; 0
 41e:	22 0f       	add	r18, r18
 420:	33 1f       	adc	r19, r19
 422:	44 1f       	adc	r20, r20
 424:	d2 f7       	brpl	.-12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 426:	bb 27       	eor	r27, r27
 428:	e9 1b       	sub	r30, r25
 42a:	f5 0b       	sbc	r31, r21
 42c:	62 1b       	sub	r22, r18
 42e:	73 0b       	sbc	r23, r19
 430:	84 0b       	sbc	r24, r20
 432:	b1 09       	sbc	r27, r1
 434:	c1 f2       	breq	.-80     	; 0x3e6 <__fixunssfsi+0x64>
 436:	22 f4       	brpl	.+8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 438:	62 0f       	add	r22, r18
 43a:	73 1f       	adc	r23, r19
 43c:	84 1f       	adc	r24, r20
 43e:	b1 1d       	adc	r27, r1
 440:	31 97       	sbiw	r30, 0x01	; 1
 442:	2a f0       	brmi	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	66 0f       	add	r22, r22
 446:	77 1f       	adc	r23, r23
 448:	88 1f       	adc	r24, r24
 44a:	bb 1f       	adc	r27, r27
 44c:	ef cf       	rjmp	.-34     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 44e:	91 50       	subi	r25, 0x01	; 1
 450:	50 40       	sbci	r21, 0x00	; 0
 452:	5a f0       	brmi	.+22     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 454:	41 f0       	breq	.+16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 456:	88 23       	and	r24, r24
 458:	32 f0       	brmi	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45a:	66 0f       	add	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	91 50       	subi	r25, 0x01	; 1
 462:	50 40       	sbci	r21, 0x00	; 0
 464:	c1 f7       	brne	.-16     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 466:	93 95       	inc	r25
 468:	0c c0       	rjmp	.+24     	; 0x482 <__fp_mpack>
 46a:	86 95       	lsr	r24
 46c:	77 95       	ror	r23
 46e:	67 95       	ror	r22
 470:	9f 5f       	subi	r25, 0xFF	; 255
 472:	d9 f7       	brne	.-10     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 474:	f8 cf       	rjmp	.-16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>

00000476 <__fp_inf>:
 476:	97 f9       	bld	r25, 7
 478:	9f 67       	ori	r25, 0x7F	; 127
 47a:	80 e8       	ldi	r24, 0x80	; 128
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	08 95       	ret

00000482 <__fp_mpack>:
 482:	9f 3f       	cpi	r25, 0xFF	; 255
 484:	31 f0       	breq	.+12     	; 0x492 <__fp_mpack_finite+0xc>

00000486 <__fp_mpack_finite>:
 486:	91 50       	subi	r25, 0x01	; 1
 488:	20 f4       	brcc	.+8      	; 0x492 <__fp_mpack_finite+0xc>
 48a:	87 95       	ror	r24
 48c:	77 95       	ror	r23
 48e:	67 95       	ror	r22
 490:	b7 95       	ror	r27
 492:	88 0f       	add	r24, r24
 494:	91 1d       	adc	r25, r1
 496:	96 95       	lsr	r25
 498:	87 95       	ror	r24
 49a:	97 f9       	bld	r25, 7
 49c:	08 95       	ret

0000049e <__fp_nan>:
 49e:	9f ef       	ldi	r25, 0xFF	; 255
 4a0:	80 ec       	ldi	r24, 0xC0	; 192
 4a2:	08 95       	ret

000004a4 <__fp_pscA>:
 4a4:	00 24       	eor	r0, r0
 4a6:	0a 94       	dec	r0
 4a8:	16 16       	cp	r1, r22
 4aa:	17 06       	cpc	r1, r23
 4ac:	18 06       	cpc	r1, r24
 4ae:	09 06       	cpc	r0, r25
 4b0:	08 95       	ret

000004b2 <__fp_pscB>:
 4b2:	00 24       	eor	r0, r0
 4b4:	0a 94       	dec	r0
 4b6:	12 16       	cp	r1, r18
 4b8:	13 06       	cpc	r1, r19
 4ba:	14 06       	cpc	r1, r20
 4bc:	05 06       	cpc	r0, r21
 4be:	08 95       	ret

000004c0 <__fp_round>:
 4c0:	09 2e       	mov	r0, r25
 4c2:	03 94       	inc	r0
 4c4:	00 0c       	add	r0, r0
 4c6:	11 f4       	brne	.+4      	; 0x4cc <__fp_round+0xc>
 4c8:	88 23       	and	r24, r24
 4ca:	52 f0       	brmi	.+20     	; 0x4e0 <__fp_round+0x20>
 4cc:	bb 0f       	add	r27, r27
 4ce:	40 f4       	brcc	.+16     	; 0x4e0 <__fp_round+0x20>
 4d0:	bf 2b       	or	r27, r31
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__fp_round+0x18>
 4d4:	60 ff       	sbrs	r22, 0
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <__fp_round+0x20>
 4d8:	6f 5f       	subi	r22, 0xFF	; 255
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	08 95       	ret

000004e2 <__fp_split3>:
 4e2:	57 fd       	sbrc	r21, 7
 4e4:	90 58       	subi	r25, 0x80	; 128
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	59 f0       	breq	.+22     	; 0x502 <__fp_splitA+0x10>
 4ec:	5f 3f       	cpi	r21, 0xFF	; 255
 4ee:	71 f0       	breq	.+28     	; 0x50c <__fp_splitA+0x1a>
 4f0:	47 95       	ror	r20

000004f2 <__fp_splitA>:
 4f2:	88 0f       	add	r24, r24
 4f4:	97 fb       	bst	r25, 7
 4f6:	99 1f       	adc	r25, r25
 4f8:	61 f0       	breq	.+24     	; 0x512 <__fp_splitA+0x20>
 4fa:	9f 3f       	cpi	r25, 0xFF	; 255
 4fc:	79 f0       	breq	.+30     	; 0x51c <__fp_splitA+0x2a>
 4fe:	87 95       	ror	r24
 500:	08 95       	ret
 502:	12 16       	cp	r1, r18
 504:	13 06       	cpc	r1, r19
 506:	14 06       	cpc	r1, r20
 508:	55 1f       	adc	r21, r21
 50a:	f2 cf       	rjmp	.-28     	; 0x4f0 <__fp_split3+0xe>
 50c:	46 95       	lsr	r20
 50e:	f1 df       	rcall	.-30     	; 0x4f2 <__fp_splitA>
 510:	08 c0       	rjmp	.+16     	; 0x522 <__fp_splitA+0x30>
 512:	16 16       	cp	r1, r22
 514:	17 06       	cpc	r1, r23
 516:	18 06       	cpc	r1, r24
 518:	99 1f       	adc	r25, r25
 51a:	f1 cf       	rjmp	.-30     	; 0x4fe <__fp_splitA+0xc>
 51c:	86 95       	lsr	r24
 51e:	71 05       	cpc	r23, r1
 520:	61 05       	cpc	r22, r1
 522:	08 94       	sec
 524:	08 95       	ret

00000526 <__fp_zero>:
 526:	e8 94       	clt

00000528 <__fp_szero>:
 528:	bb 27       	eor	r27, r27
 52a:	66 27       	eor	r22, r22
 52c:	77 27       	eor	r23, r23
 52e:	cb 01       	movw	r24, r22
 530:	97 f9       	bld	r25, 7
 532:	08 95       	ret

00000534 <__mulsf3>:
 534:	0b d0       	rcall	.+22     	; 0x54c <__mulsf3x>
 536:	c4 cf       	rjmp	.-120    	; 0x4c0 <__fp_round>
 538:	b5 df       	rcall	.-150    	; 0x4a4 <__fp_pscA>
 53a:	28 f0       	brcs	.+10     	; 0x546 <__mulsf3+0x12>
 53c:	ba df       	rcall	.-140    	; 0x4b2 <__fp_pscB>
 53e:	18 f0       	brcs	.+6      	; 0x546 <__mulsf3+0x12>
 540:	95 23       	and	r25, r21
 542:	09 f0       	breq	.+2      	; 0x546 <__mulsf3+0x12>
 544:	98 cf       	rjmp	.-208    	; 0x476 <__fp_inf>
 546:	ab cf       	rjmp	.-170    	; 0x49e <__fp_nan>
 548:	11 24       	eor	r1, r1
 54a:	ee cf       	rjmp	.-36     	; 0x528 <__fp_szero>

0000054c <__mulsf3x>:
 54c:	ca df       	rcall	.-108    	; 0x4e2 <__fp_split3>
 54e:	a0 f3       	brcs	.-24     	; 0x538 <__mulsf3+0x4>

00000550 <__mulsf3_pse>:
 550:	95 9f       	mul	r25, r21
 552:	d1 f3       	breq	.-12     	; 0x548 <__mulsf3+0x14>
 554:	95 0f       	add	r25, r21
 556:	50 e0       	ldi	r21, 0x00	; 0
 558:	55 1f       	adc	r21, r21
 55a:	62 9f       	mul	r22, r18
 55c:	f0 01       	movw	r30, r0
 55e:	72 9f       	mul	r23, r18
 560:	bb 27       	eor	r27, r27
 562:	f0 0d       	add	r31, r0
 564:	b1 1d       	adc	r27, r1
 566:	63 9f       	mul	r22, r19
 568:	aa 27       	eor	r26, r26
 56a:	f0 0d       	add	r31, r0
 56c:	b1 1d       	adc	r27, r1
 56e:	aa 1f       	adc	r26, r26
 570:	64 9f       	mul	r22, r20
 572:	66 27       	eor	r22, r22
 574:	b0 0d       	add	r27, r0
 576:	a1 1d       	adc	r26, r1
 578:	66 1f       	adc	r22, r22
 57a:	82 9f       	mul	r24, r18
 57c:	22 27       	eor	r18, r18
 57e:	b0 0d       	add	r27, r0
 580:	a1 1d       	adc	r26, r1
 582:	62 1f       	adc	r22, r18
 584:	73 9f       	mul	r23, r19
 586:	b0 0d       	add	r27, r0
 588:	a1 1d       	adc	r26, r1
 58a:	62 1f       	adc	r22, r18
 58c:	83 9f       	mul	r24, r19
 58e:	a0 0d       	add	r26, r0
 590:	61 1d       	adc	r22, r1
 592:	22 1f       	adc	r18, r18
 594:	74 9f       	mul	r23, r20
 596:	33 27       	eor	r19, r19
 598:	a0 0d       	add	r26, r0
 59a:	61 1d       	adc	r22, r1
 59c:	23 1f       	adc	r18, r19
 59e:	84 9f       	mul	r24, r20
 5a0:	60 0d       	add	r22, r0
 5a2:	21 1d       	adc	r18, r1
 5a4:	82 2f       	mov	r24, r18
 5a6:	76 2f       	mov	r23, r22
 5a8:	6a 2f       	mov	r22, r26
 5aa:	11 24       	eor	r1, r1
 5ac:	9f 57       	subi	r25, 0x7F	; 127
 5ae:	50 40       	sbci	r21, 0x00	; 0
 5b0:	8a f0       	brmi	.+34     	; 0x5d4 <__mulsf3_pse+0x84>
 5b2:	e1 f0       	breq	.+56     	; 0x5ec <__mulsf3_pse+0x9c>
 5b4:	88 23       	and	r24, r24
 5b6:	4a f0       	brmi	.+18     	; 0x5ca <__mulsf3_pse+0x7a>
 5b8:	ee 0f       	add	r30, r30
 5ba:	ff 1f       	adc	r31, r31
 5bc:	bb 1f       	adc	r27, r27
 5be:	66 1f       	adc	r22, r22
 5c0:	77 1f       	adc	r23, r23
 5c2:	88 1f       	adc	r24, r24
 5c4:	91 50       	subi	r25, 0x01	; 1
 5c6:	50 40       	sbci	r21, 0x00	; 0
 5c8:	a9 f7       	brne	.-22     	; 0x5b4 <__mulsf3_pse+0x64>
 5ca:	9e 3f       	cpi	r25, 0xFE	; 254
 5cc:	51 05       	cpc	r21, r1
 5ce:	70 f0       	brcs	.+28     	; 0x5ec <__mulsf3_pse+0x9c>
 5d0:	52 cf       	rjmp	.-348    	; 0x476 <__fp_inf>
 5d2:	aa cf       	rjmp	.-172    	; 0x528 <__fp_szero>
 5d4:	5f 3f       	cpi	r21, 0xFF	; 255
 5d6:	ec f3       	brlt	.-6      	; 0x5d2 <__mulsf3_pse+0x82>
 5d8:	98 3e       	cpi	r25, 0xE8	; 232
 5da:	dc f3       	brlt	.-10     	; 0x5d2 <__mulsf3_pse+0x82>
 5dc:	86 95       	lsr	r24
 5de:	77 95       	ror	r23
 5e0:	67 95       	ror	r22
 5e2:	b7 95       	ror	r27
 5e4:	f7 95       	ror	r31
 5e6:	e7 95       	ror	r30
 5e8:	9f 5f       	subi	r25, 0xFF	; 255
 5ea:	c1 f7       	brne	.-16     	; 0x5dc <__mulsf3_pse+0x8c>
 5ec:	fe 2b       	or	r31, r30
 5ee:	88 0f       	add	r24, r24
 5f0:	91 1d       	adc	r25, r1
 5f2:	96 95       	lsr	r25
 5f4:	87 95       	ror	r24
 5f6:	97 f9       	bld	r25, 7
 5f8:	08 95       	ret

000005fa <_exit>:
 5fa:	f8 94       	cli

000005fc <__stop_program>:
 5fc:	ff cf       	rjmp	.-2      	; 0x5fc <__stop_program>
