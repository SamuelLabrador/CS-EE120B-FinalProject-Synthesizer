
PotentiometerMultiplexing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000672  00000706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000672  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800112  00800112  00000718  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000718  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000748  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000788  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cfb  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e3  00000000  00000000  0000151b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000519  00000000  00000000  00001dfe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  00002318  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052d  00000000  00000000  00002470  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000032d  00000000  00000000  0000299d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002cca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c5 c0       	rjmp	.+394    	; 0x1c0 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e7       	ldi	r30, 0x72	; 114
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 31       	cpi	r26, 0x17	; 23
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e4 d0       	rcall	.+456    	; 0x28c <main>
  c4:	d4 c2       	rjmp	.+1448   	; 0x66e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
void TimerOff(){
	TCCR1B = 0x00;
}

void TimerISR(){
	TimerFlag = 1;
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	5f 98       	cbi	0x0b, 7	; 11
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	5e 9a       	sbi	0x0b, 6	; 11
  f4:	00 00       	nop
  f6:	5e 98       	cbi	0x0b, 6	; 11
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_Cursor>:
 106:	81 31       	cpi	r24, 0x11	; 17
 108:	18 f4       	brcc	.+6      	; 0x110 <LCD_Cursor+0xa>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret
 110:	81 55       	subi	r24, 0x51	; 81
 112:	ed cf       	rjmp	.-38     	; 0xee <LCD_WriteCommand>
 114:	08 95       	ret

00000116 <LCD_init>:
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	d6 df       	rcall	.-84     	; 0xc8 <delay_ms>
 11c:	88 e3       	ldi	r24, 0x38	; 56
 11e:	e7 df       	rcall	.-50     	; 0xee <LCD_WriteCommand>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	e5 df       	rcall	.-54     	; 0xee <LCD_WriteCommand>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	e3 df       	rcall	.-58     	; 0xee <LCD_WriteCommand>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	e1 df       	rcall	.-62     	; 0xee <LCD_WriteCommand>
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>
 132:	08 95       	ret

00000134 <LCD_WriteData>:
 134:	5f 9a       	sbi	0x0b, 7	; 11
 136:	88 b9       	out	0x08, r24	; 8
 138:	5e 9a       	sbi	0x0b, 6	; 11
 13a:	00 00       	nop
 13c:	5e 98       	cbi	0x0b, 6	; 11
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	c2 cf       	rjmp	.-124    	; 0xc8 <delay_ms>
 144:	08 95       	ret

00000146 <LCD_DisplayString>:
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	d6 df       	rcall	.-84     	; 0x100 <LCD_ClearScreen>
 154:	88 81       	ld	r24, Y
 156:	88 23       	and	r24, r24
 158:	51 f0       	breq	.+20     	; 0x16e <LCD_DisplayString+0x28>
 15a:	01 e0       	ldi	r16, 0x01	; 1
 15c:	01 0f       	add	r16, r17
 15e:	81 2f       	mov	r24, r17
 160:	d2 df       	rcall	.-92     	; 0x106 <LCD_Cursor>
 162:	89 91       	ld	r24, Y+
 164:	e7 df       	rcall	.-50     	; 0x134 <LCD_WriteData>
 166:	10 2f       	mov	r17, r16
 168:	88 81       	ld	r24, Y
 16a:	81 11       	cpse	r24, r1
 16c:	f6 cf       	rjmp	.-20     	; 0x15a <LCD_DisplayString+0x14>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <TimerOn>:
 178:	8b e0       	ldi	r24, 0x0B	; 11
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17e:	8d e7       	ldi	r24, 0x7D	; 125
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 186:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 190:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 194:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 1ac:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 1b0:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <__data_end+0x2>
 1b4:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <__data_end+0x3>
 1b8:	8f b7       	in	r24, 0x3f	; 63
 1ba:	80 68       	ori	r24, 0x80	; 128
 1bc:	8f bf       	out	0x3f, r24	; 63
 1be:	08 95       	ret

000001c0 <__vector_13>:
}

ISR(TIMER1_COMPA_vect){
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 1d2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1d6:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 1da:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <__data_end+0x2>
 1de:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <__data_end+0x3>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	a1 09       	sbc	r26, r1
 1e6:	b1 09       	sbc	r27, r1
 1e8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 1ec:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 1f0:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <__data_end+0x2>
 1f4:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <__data_end+0x3>
	if(_avr_timer_cntcurr == 0){
 1f8:	89 2b       	or	r24, r25
 1fa:	8a 2b       	or	r24, r26
 1fc:	8b 2b       	or	r24, r27
 1fe:	99 f4       	brne	.+38     	; 0x226 <__vector_13+0x66>
void TimerOff(){
	TCCR1B = 0x00;
}

void TimerISR(){
	TimerFlag = 1;
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <TimerFlag>

ISR(TIMER1_COMPA_vect){
	_avr_timer_cntcurr--;
	if(_avr_timer_cntcurr == 0){
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 20a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 212:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 216:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 21a:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 21e:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <__data_end+0x2>
 222:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <__data_end+0x3>
	}
}
 226:	bf 91       	pop	r27
 228:	af 91       	pop	r26
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <TimerSet>:

void TimerSet(unsigned long M){
	_avr_timer_M = M;
 238:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 23c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 240:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 244:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 248:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 24c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <__data_end+0x1>
 250:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end+0x2>
 254:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x3>
 258:	08 95       	ret

0000025a <ADC_init>:
}

void ADC_init() {
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
 25a:	ea e7       	ldi	r30, 0x7A	; 122
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	80 6e       	ori	r24, 0xE0	; 224
 262:	80 83       	st	Z, r24
 264:	08 95       	ret

00000266 <scaleTo100>:
		TimerFlag = 0;
	}
}

unsigned long scaleTo100(){
	return (ADC - 32.0)/9.77;
 266:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 26a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	6f d1       	rcall	.+734    	; 0x552 <__floatunsisf>
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 e0       	ldi	r20, 0x00	; 0
 27a:	52 e4       	ldi	r21, 0x42	; 66
 27c:	71 d0       	rcall	.+226    	; 0x360 <__subsf3>
 27e:	2c ee       	ldi	r18, 0xEC	; 236
 280:	31 e5       	ldi	r19, 0x51	; 81
 282:	4c e1       	ldi	r20, 0x1C	; 28
 284:	51 e4       	ldi	r21, 0x41	; 65
 286:	d1 d0       	rcall	.+418    	; 0x42a <__divsf3>
 288:	38 c1       	rjmp	.+624    	; 0x4fa <__fixunssfsi>
}
 28a:	08 95       	ret

0000028c <main>:

unsigned long scaleTo100();
unsigned long invertScaleTo100();

int main(void)
{
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	00 d0       	rcall	.+0      	; 0x292 <main+0x6>
 292:	00 d0       	rcall	.+0      	; 0x294 <main+0x8>
 294:	cd b7       	in	r28, 0x3d	; 61
 296:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x00; PORTA = 0xFF;
 298:	11 b8       	out	0x01, r1	; 1
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
 29e:	87 b9       	out	0x07, r24	; 7
 2a0:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 2a2:	8a b9       	out	0x0a, r24	; 10
 2a4:	1b b8       	out	0x0b, r1	; 11
	
	ADC_init();
 2a6:	d9 df       	rcall	.-78     	; 0x25a <ADC_init>
	char output = 0x00;
	char knob_1 = 0x00;
	char knob_2 = 0x00;
	char knob_3 = 0x00;
	char knob_4 = 0x00;
	char knobs[] = {knob_1, knob_2, knob_3, knob_4};
 2a8:	19 82       	std	Y+1, r1	; 0x01
 2aa:	1a 82       	std	Y+2, r1	; 0x02
 2ac:	1b 82       	std	Y+3, r1	; 0x03
 2ae:	1c 82       	std	Y+4, r1	; 0x04
	char str[2];
	char count = 0x00;
	
	TimerSet(10);
 2b0:	6a e0       	ldi	r22, 0x0A	; 10
 2b2:	70 e0       	ldi	r23, 0x00	; 0
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();
 2b8:	bf df       	rcall	.-130    	; 0x238 <TimerSet>
 2ba:	5e df       	rcall	.-324    	; 0x178 <TimerOn>
	
	LCD_init();
 2bc:	2c df       	rcall	.-424    	; 0x116 <LCD_init>
	LCD_DisplayString(1, "A   D   S   R");
 2be:	64 e0       	ldi	r22, 0x04	; 4
 2c0:	71 e0       	ldi	r23, 0x01	; 1
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	40 df       	rcall	.-384    	; 0x146 <LCD_DisplayString>
 2c6:	81 e0       	ldi	r24, 0x01	; 1
	
	ADMUX = 0x01;
 2c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 2cc:	10 e0       	ldi	r17, 0x00	; 0
	char knob_2 = 0x00;
	char knob_3 = 0x00;
	char knob_4 = 0x00;
	char knobs[] = {knob_1, knob_2, knob_3, knob_4};
	char str[2];
	char count = 0x00;
 2ce:	0f 2e       	mov	r0, r31
			
			str[0] = (char)(output/10) + 48;
			str[1] = output % 10 + 48;
			
			LCD_Cursor(17 + count * 4);
			LCD_WriteData(str[0]);
 2d0:	fd ec       	ldi	r31, 0xCD	; 205
 2d2:	af 2e       	mov	r10, r31
 2d4:	f0 2d       	mov	r31, r0
 2d6:	0f 2e       	mov	r0, r31
		count++;
		if(count > 3){
			count = 0;
		}
		
		ADMUX = count + 1;
 2d8:	fc e7       	ldi	r31, 0x7C	; 124
 2da:	cf 2e       	mov	r12, r31
 2dc:	d1 2c       	mov	r13, r1
 2de:	f0 2d       	mov	r31, r0
	
	ADMUX = 0x01;
	
	while (1)
	{	
		output = scaleTo100();
 2e0:	c2 df       	rcall	.-124    	; 0x266 <scaleTo100>
 2e2:	b6 2e       	mov	r11, r22
 2e4:	e1 2e       	mov	r14, r17
		if(output != knobs[count]){
 2e6:	f1 2c       	mov	r15, r1
 2e8:	e1 e0       	ldi	r30, 0x01	; 1
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	ec 0f       	add	r30, r28
 2ee:	fd 1f       	adc	r31, r29
 2f0:	ee 0d       	add	r30, r14
 2f2:	ff 1d       	adc	r31, r15
 2f4:	80 81       	ld	r24, Z
 2f6:	b8 16       	cp	r11, r24
 2f8:	21 f1       	breq	.+72     	; 0x342 <main+0xb6>
			
			str[0] = (char)(output/10) + 48;
			str[1] = output % 10 + 48;
			
			LCD_Cursor(17 + count * 4);
 2fa:	91 2e       	mov	r9, r17
 2fc:	99 0c       	add	r9, r9
 2fe:	99 0c       	add	r9, r9
 300:	81 e1       	ldi	r24, 0x11	; 17
 302:	89 0d       	add	r24, r9
 304:	00 df       	rcall	.-512    	; 0x106 <LCD_Cursor>
 306:	ba 9c       	mul	r11, r10
			LCD_WriteData(str[0]);
 308:	01 2d       	mov	r16, r1
 30a:	11 24       	eor	r1, r1
 30c:	06 95       	lsr	r16
 30e:	06 95       	lsr	r16
 310:	06 95       	lsr	r16
 312:	80 e3       	ldi	r24, 0x30	; 48
 314:	80 0f       	add	r24, r16
 316:	0e df       	rcall	.-484    	; 0x134 <LCD_WriteData>
			LCD_Cursor(18 + count * 4);
 318:	82 e1       	ldi	r24, 0x12	; 18
 31a:	89 0d       	add	r24, r9
 31c:	f4 de       	rcall	.-536    	; 0x106 <LCD_Cursor>
			LCD_WriteData(str[1]);
 31e:	00 0f       	add	r16, r16
 320:	80 2f       	mov	r24, r16
 322:	88 0f       	add	r24, r24
 324:	88 0f       	add	r24, r24
 326:	08 0f       	add	r16, r24
 328:	8b 2d       	mov	r24, r11
 32a:	80 1b       	sub	r24, r16
 32c:	80 5d       	subi	r24, 0xD0	; 208
 32e:	02 df       	rcall	.-508    	; 0x134 <LCD_WriteData>
			LCD_Cursor(0);
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	e9 de       	rcall	.-558    	; 0x106 <LCD_Cursor>
 334:	e1 e0       	ldi	r30, 0x01	; 1
			knobs[count] = output;
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	ec 0f       	add	r30, r28
 33a:	fd 1f       	adc	r31, r29
 33c:	ee 0d       	add	r30, r14
 33e:	ff 1d       	adc	r31, r15
 340:	b0 82       	st	Z, r11
 342:	1f 5f       	subi	r17, 0xFF	; 255
		}
		
		count++;
 344:	14 30       	cpi	r17, 0x04	; 4
		if(count > 3){
 346:	08 f0       	brcs	.+2      	; 0x34a <main+0xbe>
 348:	10 e0       	ldi	r17, 0x00	; 0
			count = 0;
 34a:	81 e0       	ldi	r24, 0x01	; 1
		}
		
		ADMUX = count + 1;
 34c:	81 0f       	add	r24, r17
 34e:	f6 01       	movw	r30, r12
 350:	80 83       	st	Z, r24
 352:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <TimerFlag>
		
		while(!TimerFlag);
 356:	88 23       	and	r24, r24
 358:	e1 f3       	breq	.-8      	; 0x352 <main+0xc6>
 35a:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <TimerFlag>
		TimerFlag = 0;
 35e:	c0 cf       	rjmp	.-128    	; 0x2e0 <main+0x54>

00000360 <__subsf3>:
	}
 360:	50 58       	subi	r21, 0x80	; 128

00000362 <__addsf3>:
 362:	bb 27       	eor	r27, r27
 364:	aa 27       	eor	r26, r26
 366:	0e d0       	rcall	.+28     	; 0x384 <__addsf3x>
 368:	48 c1       	rjmp	.+656    	; 0x5fa <__fp_round>
 36a:	39 d1       	rcall	.+626    	; 0x5de <__fp_pscA>
 36c:	30 f0       	brcs	.+12     	; 0x37a <__addsf3+0x18>
 36e:	3e d1       	rcall	.+636    	; 0x5ec <__fp_pscB>
 370:	20 f0       	brcs	.+8      	; 0x37a <__addsf3+0x18>
 372:	31 f4       	brne	.+12     	; 0x380 <__addsf3+0x1e>
 374:	9f 3f       	cpi	r25, 0xFF	; 255
 376:	11 f4       	brne	.+4      	; 0x37c <__addsf3+0x1a>
 378:	1e f4       	brtc	.+6      	; 0x380 <__addsf3+0x1e>
 37a:	2e c1       	rjmp	.+604    	; 0x5d8 <__fp_nan>
 37c:	0e f4       	brtc	.+2      	; 0x380 <__addsf3+0x1e>
 37e:	e0 95       	com	r30
 380:	e7 fb       	bst	r30, 7
 382:	24 c1       	rjmp	.+584    	; 0x5cc <__fp_inf>

00000384 <__addsf3x>:
 384:	e9 2f       	mov	r30, r25
 386:	4a d1       	rcall	.+660    	; 0x61c <__fp_split3>
 388:	80 f3       	brcs	.-32     	; 0x36a <__addsf3+0x8>
 38a:	ba 17       	cp	r27, r26
 38c:	62 07       	cpc	r22, r18
 38e:	73 07       	cpc	r23, r19
 390:	84 07       	cpc	r24, r20
 392:	95 07       	cpc	r25, r21
 394:	18 f0       	brcs	.+6      	; 0x39c <__addsf3x+0x18>
 396:	71 f4       	brne	.+28     	; 0x3b4 <__addsf3x+0x30>
 398:	9e f5       	brtc	.+102    	; 0x400 <__LOCK_REGION_LENGTH__>
 39a:	62 c1       	rjmp	.+708    	; 0x660 <__fp_zero>
 39c:	0e f4       	brtc	.+2      	; 0x3a0 <__addsf3x+0x1c>
 39e:	e0 95       	com	r30
 3a0:	0b 2e       	mov	r0, r27
 3a2:	ba 2f       	mov	r27, r26
 3a4:	a0 2d       	mov	r26, r0
 3a6:	0b 01       	movw	r0, r22
 3a8:	b9 01       	movw	r22, r18
 3aa:	90 01       	movw	r18, r0
 3ac:	0c 01       	movw	r0, r24
 3ae:	ca 01       	movw	r24, r20
 3b0:	a0 01       	movw	r20, r0
 3b2:	11 24       	eor	r1, r1
 3b4:	ff 27       	eor	r31, r31
 3b6:	59 1b       	sub	r21, r25
 3b8:	99 f0       	breq	.+38     	; 0x3e0 <__addsf3x+0x5c>
 3ba:	59 3f       	cpi	r21, 0xF9	; 249
 3bc:	50 f4       	brcc	.+20     	; 0x3d2 <__addsf3x+0x4e>
 3be:	50 3e       	cpi	r21, 0xE0	; 224
 3c0:	68 f1       	brcs	.+90     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3c2:	1a 16       	cp	r1, r26
 3c4:	f0 40       	sbci	r31, 0x00	; 0
 3c6:	a2 2f       	mov	r26, r18
 3c8:	23 2f       	mov	r18, r19
 3ca:	34 2f       	mov	r19, r20
 3cc:	44 27       	eor	r20, r20
 3ce:	58 5f       	subi	r21, 0xF8	; 248
 3d0:	f3 cf       	rjmp	.-26     	; 0x3b8 <__addsf3x+0x34>
 3d2:	46 95       	lsr	r20
 3d4:	37 95       	ror	r19
 3d6:	27 95       	ror	r18
 3d8:	a7 95       	ror	r26
 3da:	f0 40       	sbci	r31, 0x00	; 0
 3dc:	53 95       	inc	r21
 3de:	c9 f7       	brne	.-14     	; 0x3d2 <__addsf3x+0x4e>
 3e0:	7e f4       	brtc	.+30     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e2:	1f 16       	cp	r1, r31
 3e4:	ba 0b       	sbc	r27, r26
 3e6:	62 0b       	sbc	r22, r18
 3e8:	73 0b       	sbc	r23, r19
 3ea:	84 0b       	sbc	r24, r20
 3ec:	ba f0       	brmi	.+46     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3ee:	91 50       	subi	r25, 0x01	; 1
 3f0:	a1 f0       	breq	.+40     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f2:	ff 0f       	add	r31, r31
 3f4:	bb 1f       	adc	r27, r27
 3f6:	66 1f       	adc	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	c2 f7       	brpl	.-16     	; 0x3ee <__addsf3x+0x6a>
 3fe:	0e c0       	rjmp	.+28     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 400:	ba 0f       	add	r27, r26
 402:	62 1f       	adc	r22, r18
 404:	73 1f       	adc	r23, r19
 406:	84 1f       	adc	r24, r20
 408:	48 f4       	brcc	.+18     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40a:	87 95       	ror	r24
 40c:	77 95       	ror	r23
 40e:	67 95       	ror	r22
 410:	b7 95       	ror	r27
 412:	f7 95       	ror	r31
 414:	9e 3f       	cpi	r25, 0xFE	; 254
 416:	08 f0       	brcs	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 418:	b3 cf       	rjmp	.-154    	; 0x380 <__addsf3+0x1e>
 41a:	93 95       	inc	r25
 41c:	88 0f       	add	r24, r24
 41e:	08 f0       	brcs	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 420:	99 27       	eor	r25, r25
 422:	ee 0f       	add	r30, r30
 424:	97 95       	ror	r25
 426:	87 95       	ror	r24
 428:	08 95       	ret

0000042a <__divsf3>:
 42a:	0c d0       	rcall	.+24     	; 0x444 <__divsf3x>
 42c:	e6 c0       	rjmp	.+460    	; 0x5fa <__fp_round>
 42e:	de d0       	rcall	.+444    	; 0x5ec <__fp_pscB>
 430:	40 f0       	brcs	.+16     	; 0x442 <__divsf3+0x18>
 432:	d5 d0       	rcall	.+426    	; 0x5de <__fp_pscA>
 434:	30 f0       	brcs	.+12     	; 0x442 <__divsf3+0x18>
 436:	21 f4       	brne	.+8      	; 0x440 <__divsf3+0x16>
 438:	5f 3f       	cpi	r21, 0xFF	; 255
 43a:	19 f0       	breq	.+6      	; 0x442 <__divsf3+0x18>
 43c:	c7 c0       	rjmp	.+398    	; 0x5cc <__fp_inf>
 43e:	51 11       	cpse	r21, r1
 440:	10 c1       	rjmp	.+544    	; 0x662 <__fp_szero>
 442:	ca c0       	rjmp	.+404    	; 0x5d8 <__fp_nan>

00000444 <__divsf3x>:
 444:	eb d0       	rcall	.+470    	; 0x61c <__fp_split3>
 446:	98 f3       	brcs	.-26     	; 0x42e <__divsf3+0x4>

00000448 <__divsf3_pse>:
 448:	99 23       	and	r25, r25
 44a:	c9 f3       	breq	.-14     	; 0x43e <__divsf3+0x14>
 44c:	55 23       	and	r21, r21
 44e:	b1 f3       	breq	.-20     	; 0x43c <__divsf3+0x12>
 450:	95 1b       	sub	r25, r21
 452:	55 0b       	sbc	r21, r21
 454:	bb 27       	eor	r27, r27
 456:	aa 27       	eor	r26, r26
 458:	62 17       	cp	r22, r18
 45a:	73 07       	cpc	r23, r19
 45c:	84 07       	cpc	r24, r20
 45e:	38 f0       	brcs	.+14     	; 0x46e <__divsf3_pse+0x26>
 460:	9f 5f       	subi	r25, 0xFF	; 255
 462:	5f 4f       	sbci	r21, 0xFF	; 255
 464:	22 0f       	add	r18, r18
 466:	33 1f       	adc	r19, r19
 468:	44 1f       	adc	r20, r20
 46a:	aa 1f       	adc	r26, r26
 46c:	a9 f3       	breq	.-22     	; 0x458 <__divsf3_pse+0x10>
 46e:	33 d0       	rcall	.+102    	; 0x4d6 <__divsf3_pse+0x8e>
 470:	0e 2e       	mov	r0, r30
 472:	3a f0       	brmi	.+14     	; 0x482 <__divsf3_pse+0x3a>
 474:	e0 e8       	ldi	r30, 0x80	; 128
 476:	30 d0       	rcall	.+96     	; 0x4d8 <__divsf3_pse+0x90>
 478:	91 50       	subi	r25, 0x01	; 1
 47a:	50 40       	sbci	r21, 0x00	; 0
 47c:	e6 95       	lsr	r30
 47e:	00 1c       	adc	r0, r0
 480:	ca f7       	brpl	.-14     	; 0x474 <__divsf3_pse+0x2c>
 482:	29 d0       	rcall	.+82     	; 0x4d6 <__divsf3_pse+0x8e>
 484:	fe 2f       	mov	r31, r30
 486:	27 d0       	rcall	.+78     	; 0x4d6 <__divsf3_pse+0x8e>
 488:	66 0f       	add	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	88 1f       	adc	r24, r24
 48e:	bb 1f       	adc	r27, r27
 490:	26 17       	cp	r18, r22
 492:	37 07       	cpc	r19, r23
 494:	48 07       	cpc	r20, r24
 496:	ab 07       	cpc	r26, r27
 498:	b0 e8       	ldi	r27, 0x80	; 128
 49a:	09 f0       	breq	.+2      	; 0x49e <__divsf3_pse+0x56>
 49c:	bb 0b       	sbc	r27, r27
 49e:	80 2d       	mov	r24, r0
 4a0:	bf 01       	movw	r22, r30
 4a2:	ff 27       	eor	r31, r31
 4a4:	93 58       	subi	r25, 0x83	; 131
 4a6:	5f 4f       	sbci	r21, 0xFF	; 255
 4a8:	2a f0       	brmi	.+10     	; 0x4b4 <__divsf3_pse+0x6c>
 4aa:	9e 3f       	cpi	r25, 0xFE	; 254
 4ac:	51 05       	cpc	r21, r1
 4ae:	68 f0       	brcs	.+26     	; 0x4ca <__divsf3_pse+0x82>
 4b0:	8d c0       	rjmp	.+282    	; 0x5cc <__fp_inf>
 4b2:	d7 c0       	rjmp	.+430    	; 0x662 <__fp_szero>
 4b4:	5f 3f       	cpi	r21, 0xFF	; 255
 4b6:	ec f3       	brlt	.-6      	; 0x4b2 <__divsf3_pse+0x6a>
 4b8:	98 3e       	cpi	r25, 0xE8	; 232
 4ba:	dc f3       	brlt	.-10     	; 0x4b2 <__divsf3_pse+0x6a>
 4bc:	86 95       	lsr	r24
 4be:	77 95       	ror	r23
 4c0:	67 95       	ror	r22
 4c2:	b7 95       	ror	r27
 4c4:	f7 95       	ror	r31
 4c6:	9f 5f       	subi	r25, 0xFF	; 255
 4c8:	c9 f7       	brne	.-14     	; 0x4bc <__divsf3_pse+0x74>
 4ca:	88 0f       	add	r24, r24
 4cc:	91 1d       	adc	r25, r1
 4ce:	96 95       	lsr	r25
 4d0:	87 95       	ror	r24
 4d2:	97 f9       	bld	r25, 7
 4d4:	08 95       	ret
 4d6:	e1 e0       	ldi	r30, 0x01	; 1
 4d8:	66 0f       	add	r22, r22
 4da:	77 1f       	adc	r23, r23
 4dc:	88 1f       	adc	r24, r24
 4de:	bb 1f       	adc	r27, r27
 4e0:	62 17       	cp	r22, r18
 4e2:	73 07       	cpc	r23, r19
 4e4:	84 07       	cpc	r24, r20
 4e6:	ba 07       	cpc	r27, r26
 4e8:	20 f0       	brcs	.+8      	; 0x4f2 <__divsf3_pse+0xaa>
 4ea:	62 1b       	sub	r22, r18
 4ec:	73 0b       	sbc	r23, r19
 4ee:	84 0b       	sbc	r24, r20
 4f0:	ba 0b       	sbc	r27, r26
 4f2:	ee 1f       	adc	r30, r30
 4f4:	88 f7       	brcc	.-30     	; 0x4d8 <__divsf3_pse+0x90>
 4f6:	e0 95       	com	r30
 4f8:	08 95       	ret

000004fa <__fixunssfsi>:
 4fa:	98 d0       	rcall	.+304    	; 0x62c <__fp_splitA>
 4fc:	88 f0       	brcs	.+34     	; 0x520 <__fixunssfsi+0x26>
 4fe:	9f 57       	subi	r25, 0x7F	; 127
 500:	90 f0       	brcs	.+36     	; 0x526 <__fixunssfsi+0x2c>
 502:	b9 2f       	mov	r27, r25
 504:	99 27       	eor	r25, r25
 506:	b7 51       	subi	r27, 0x17	; 23
 508:	a0 f0       	brcs	.+40     	; 0x532 <__fixunssfsi+0x38>
 50a:	d1 f0       	breq	.+52     	; 0x540 <__fixunssfsi+0x46>
 50c:	66 0f       	add	r22, r22
 50e:	77 1f       	adc	r23, r23
 510:	88 1f       	adc	r24, r24
 512:	99 1f       	adc	r25, r25
 514:	1a f0       	brmi	.+6      	; 0x51c <__fixunssfsi+0x22>
 516:	ba 95       	dec	r27
 518:	c9 f7       	brne	.-14     	; 0x50c <__fixunssfsi+0x12>
 51a:	12 c0       	rjmp	.+36     	; 0x540 <__fixunssfsi+0x46>
 51c:	b1 30       	cpi	r27, 0x01	; 1
 51e:	81 f0       	breq	.+32     	; 0x540 <__fixunssfsi+0x46>
 520:	9f d0       	rcall	.+318    	; 0x660 <__fp_zero>
 522:	b1 e0       	ldi	r27, 0x01	; 1
 524:	08 95       	ret
 526:	9c c0       	rjmp	.+312    	; 0x660 <__fp_zero>
 528:	67 2f       	mov	r22, r23
 52a:	78 2f       	mov	r23, r24
 52c:	88 27       	eor	r24, r24
 52e:	b8 5f       	subi	r27, 0xF8	; 248
 530:	39 f0       	breq	.+14     	; 0x540 <__fixunssfsi+0x46>
 532:	b9 3f       	cpi	r27, 0xF9	; 249
 534:	cc f3       	brlt	.-14     	; 0x528 <__fixunssfsi+0x2e>
 536:	86 95       	lsr	r24
 538:	77 95       	ror	r23
 53a:	67 95       	ror	r22
 53c:	b3 95       	inc	r27
 53e:	d9 f7       	brne	.-10     	; 0x536 <__fixunssfsi+0x3c>
 540:	3e f4       	brtc	.+14     	; 0x550 <__fixunssfsi+0x56>
 542:	90 95       	com	r25
 544:	80 95       	com	r24
 546:	70 95       	com	r23
 548:	61 95       	neg	r22
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	08 95       	ret

00000552 <__floatunsisf>:
 552:	e8 94       	clt
 554:	09 c0       	rjmp	.+18     	; 0x568 <__floatsisf+0x12>

00000556 <__floatsisf>:
 556:	97 fb       	bst	r25, 7
 558:	3e f4       	brtc	.+14     	; 0x568 <__floatsisf+0x12>
 55a:	90 95       	com	r25
 55c:	80 95       	com	r24
 55e:	70 95       	com	r23
 560:	61 95       	neg	r22
 562:	7f 4f       	sbci	r23, 0xFF	; 255
 564:	8f 4f       	sbci	r24, 0xFF	; 255
 566:	9f 4f       	sbci	r25, 0xFF	; 255
 568:	99 23       	and	r25, r25
 56a:	a9 f0       	breq	.+42     	; 0x596 <__floatsisf+0x40>
 56c:	f9 2f       	mov	r31, r25
 56e:	96 e9       	ldi	r25, 0x96	; 150
 570:	bb 27       	eor	r27, r27
 572:	93 95       	inc	r25
 574:	f6 95       	lsr	r31
 576:	87 95       	ror	r24
 578:	77 95       	ror	r23
 57a:	67 95       	ror	r22
 57c:	b7 95       	ror	r27
 57e:	f1 11       	cpse	r31, r1
 580:	f8 cf       	rjmp	.-16     	; 0x572 <__floatsisf+0x1c>
 582:	fa f4       	brpl	.+62     	; 0x5c2 <__floatsisf+0x6c>
 584:	bb 0f       	add	r27, r27
 586:	11 f4       	brne	.+4      	; 0x58c <__floatsisf+0x36>
 588:	60 ff       	sbrs	r22, 0
 58a:	1b c0       	rjmp	.+54     	; 0x5c2 <__floatsisf+0x6c>
 58c:	6f 5f       	subi	r22, 0xFF	; 255
 58e:	7f 4f       	sbci	r23, 0xFF	; 255
 590:	8f 4f       	sbci	r24, 0xFF	; 255
 592:	9f 4f       	sbci	r25, 0xFF	; 255
 594:	16 c0       	rjmp	.+44     	; 0x5c2 <__floatsisf+0x6c>
 596:	88 23       	and	r24, r24
 598:	11 f0       	breq	.+4      	; 0x59e <__floatsisf+0x48>
 59a:	96 e9       	ldi	r25, 0x96	; 150
 59c:	11 c0       	rjmp	.+34     	; 0x5c0 <__floatsisf+0x6a>
 59e:	77 23       	and	r23, r23
 5a0:	21 f0       	breq	.+8      	; 0x5aa <__floatsisf+0x54>
 5a2:	9e e8       	ldi	r25, 0x8E	; 142
 5a4:	87 2f       	mov	r24, r23
 5a6:	76 2f       	mov	r23, r22
 5a8:	05 c0       	rjmp	.+10     	; 0x5b4 <__floatsisf+0x5e>
 5aa:	66 23       	and	r22, r22
 5ac:	71 f0       	breq	.+28     	; 0x5ca <__floatsisf+0x74>
 5ae:	96 e8       	ldi	r25, 0x86	; 134
 5b0:	86 2f       	mov	r24, r22
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	60 e0       	ldi	r22, 0x00	; 0
 5b6:	2a f0       	brmi	.+10     	; 0x5c2 <__floatsisf+0x6c>
 5b8:	9a 95       	dec	r25
 5ba:	66 0f       	add	r22, r22
 5bc:	77 1f       	adc	r23, r23
 5be:	88 1f       	adc	r24, r24
 5c0:	da f7       	brpl	.-10     	; 0x5b8 <__floatsisf+0x62>
 5c2:	88 0f       	add	r24, r24
 5c4:	96 95       	lsr	r25
 5c6:	87 95       	ror	r24
 5c8:	97 f9       	bld	r25, 7
 5ca:	08 95       	ret

000005cc <__fp_inf>:
 5cc:	97 f9       	bld	r25, 7
 5ce:	9f 67       	ori	r25, 0x7F	; 127
 5d0:	80 e8       	ldi	r24, 0x80	; 128
 5d2:	70 e0       	ldi	r23, 0x00	; 0
 5d4:	60 e0       	ldi	r22, 0x00	; 0
 5d6:	08 95       	ret

000005d8 <__fp_nan>:
 5d8:	9f ef       	ldi	r25, 0xFF	; 255
 5da:	80 ec       	ldi	r24, 0xC0	; 192
 5dc:	08 95       	ret

000005de <__fp_pscA>:
 5de:	00 24       	eor	r0, r0
 5e0:	0a 94       	dec	r0
 5e2:	16 16       	cp	r1, r22
 5e4:	17 06       	cpc	r1, r23
 5e6:	18 06       	cpc	r1, r24
 5e8:	09 06       	cpc	r0, r25
 5ea:	08 95       	ret

000005ec <__fp_pscB>:
 5ec:	00 24       	eor	r0, r0
 5ee:	0a 94       	dec	r0
 5f0:	12 16       	cp	r1, r18
 5f2:	13 06       	cpc	r1, r19
 5f4:	14 06       	cpc	r1, r20
 5f6:	05 06       	cpc	r0, r21
 5f8:	08 95       	ret

000005fa <__fp_round>:
 5fa:	09 2e       	mov	r0, r25
 5fc:	03 94       	inc	r0
 5fe:	00 0c       	add	r0, r0
 600:	11 f4       	brne	.+4      	; 0x606 <__fp_round+0xc>
 602:	88 23       	and	r24, r24
 604:	52 f0       	brmi	.+20     	; 0x61a <__fp_round+0x20>
 606:	bb 0f       	add	r27, r27
 608:	40 f4       	brcc	.+16     	; 0x61a <__fp_round+0x20>
 60a:	bf 2b       	or	r27, r31
 60c:	11 f4       	brne	.+4      	; 0x612 <__fp_round+0x18>
 60e:	60 ff       	sbrs	r22, 0
 610:	04 c0       	rjmp	.+8      	; 0x61a <__fp_round+0x20>
 612:	6f 5f       	subi	r22, 0xFF	; 255
 614:	7f 4f       	sbci	r23, 0xFF	; 255
 616:	8f 4f       	sbci	r24, 0xFF	; 255
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	08 95       	ret

0000061c <__fp_split3>:
 61c:	57 fd       	sbrc	r21, 7
 61e:	90 58       	subi	r25, 0x80	; 128
 620:	44 0f       	add	r20, r20
 622:	55 1f       	adc	r21, r21
 624:	59 f0       	breq	.+22     	; 0x63c <__fp_splitA+0x10>
 626:	5f 3f       	cpi	r21, 0xFF	; 255
 628:	71 f0       	breq	.+28     	; 0x646 <__fp_splitA+0x1a>
 62a:	47 95       	ror	r20

0000062c <__fp_splitA>:
 62c:	88 0f       	add	r24, r24
 62e:	97 fb       	bst	r25, 7
 630:	99 1f       	adc	r25, r25
 632:	61 f0       	breq	.+24     	; 0x64c <__fp_splitA+0x20>
 634:	9f 3f       	cpi	r25, 0xFF	; 255
 636:	79 f0       	breq	.+30     	; 0x656 <__fp_splitA+0x2a>
 638:	87 95       	ror	r24
 63a:	08 95       	ret
 63c:	12 16       	cp	r1, r18
 63e:	13 06       	cpc	r1, r19
 640:	14 06       	cpc	r1, r20
 642:	55 1f       	adc	r21, r21
 644:	f2 cf       	rjmp	.-28     	; 0x62a <__fp_split3+0xe>
 646:	46 95       	lsr	r20
 648:	f1 df       	rcall	.-30     	; 0x62c <__fp_splitA>
 64a:	08 c0       	rjmp	.+16     	; 0x65c <__fp_splitA+0x30>
 64c:	16 16       	cp	r1, r22
 64e:	17 06       	cpc	r1, r23
 650:	18 06       	cpc	r1, r24
 652:	99 1f       	adc	r25, r25
 654:	f1 cf       	rjmp	.-30     	; 0x638 <__fp_splitA+0xc>
 656:	86 95       	lsr	r24
 658:	71 05       	cpc	r23, r1
 65a:	61 05       	cpc	r22, r1
 65c:	08 94       	sec
 65e:	08 95       	ret

00000660 <__fp_zero>:
 660:	e8 94       	clt

00000662 <__fp_szero>:
 662:	bb 27       	eor	r27, r27
 664:	66 27       	eor	r22, r22
 666:	77 27       	eor	r23, r23
 668:	cb 01       	movw	r24, r22
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <_exit>:
 66e:	f8 94       	cli

00000670 <__stop_program>:
 670:	ff cf       	rjmp	.-2      	; 0x670 <__stop_program>
